{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass RegisterComponent {\n  constructor() {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8), passwordValidator()])\n    });\n  }\n  submitForm() {\n    throw new Error('Method not implemented.');\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"row\", \"mb-4\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"display-4\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", \"name\", \"groupName\", \"formControlName\", \"groupName\", \"required\", \"\", 1, \"form-control\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 1)(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Group name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RegisterComponent };\nexport function passwordValidator() {\n  return control => {\n    const value = control.value;\n    const capitalRegex = /[A-Z]/;\n    if (!capitalRegex.test(value)) {\n      return {\n        capital: true\n      };\n    }\n    const numberRegex = /[0-9]/;\n    if (!numberRegex.test(value)) {\n      return {\n        number: true\n      };\n    }\n    const specialCharRegex = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    if (!specialCharRegex.test(value)) {\n      return {\n        specialChar: true\n      };\n    }\n    return null;\n  };\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","RegisterComponent","constructor","registerForm","username","required","email","password","minLength","passwordValidator","submitForm","Error","_","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_7_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","control","value","capitalRegex","test","capital","numberRegex","number","specialCharRegex","specialChar"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\register\\register.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8), passwordValidator()]),\n  })\n\n  submitForm() {\n    throw new Error('Method not implemented.');\n    }\n}\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const value: string = control.value;\n    \n    const capitalRegex = /[A-Z]/;\n    if (!capitalRegex.test(value)) {\n      return { capital: true };\n    }\n    \n    const numberRegex = /[0-9]/;\n    if (!numberRegex.test(value)) {\n      return { number: true };\n    }\n\n    const specialCharRegex = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    if (!specialCharRegex.test(value)) {\n      return { specialChar: true };\n    }\n\n    return null;\n  };\n}","<div class=\"row mb-4\">\n  <div class=\"col\">\n    <div class=\"d-flex justify-content-center\">\n      <span class=\"display-4\">Register</span>\n    </div>\n  </div>\n</div>\n<div class=\"row d-flex justify-content-center\">\n    <div class=\"col\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"submitForm()\">\n            <div class=\"form-group\">\n                <label for=\"groupName\">Group name</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"groupName\"\n                  name=\"groupName\"\n                  formControlName=\"groupName\"\n                  required\n                />\n              </div>\n        </form>\n    </div>\n</div>\n"],"mappings":"AACA,SAA0BA,WAAW,EAAEC,SAAS,EAAiCC,UAAU,QAAQ,gBAAgB;;;AAEnH,MAKaC,iBAAiB;EAL9BC,YAAA;IAME,KAAAC,YAAY,GAAG,IAAIJ,SAAS,CAAC;MAC3BK,QAAQ,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACK,QAAQ,CAAC;MAClDC,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EAAEC,iBAAiB,EAAE,CAAC;KAClG,CAAC;;EAEFC,UAAUA,CAAA;IACR,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC1C;EAAC,QAAAC,CAAA,G;qBATQX,iBAAiB;EAAA;EAAA,QAAAY,EAAA,G;UAAjBZ,iBAAiB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BE,EAAA,CAAAC,cAAA,aAAsB;QAGQD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAI7CH,EAAA,CAAAC,cAAA,aAA+C;QAEND,EAAA,CAAAI,UAAA,sBAAAC,oDAAA;UAAA,OAAYN,GAAA,CAAAX,UAAA,EAAY;QAAA,EAAC;QACtDY,EAAA,CAAAC,cAAA,aAAwB;QACGD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzCH,EAAA,CAAAM,SAAA,gBAOE;QACJN,EAAA,CAAAG,YAAA,EAAM;;;QAXNH,EAAA,CAAAO,SAAA,GAA0B;QAA1BP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAlB,YAAA,CAA0B;;;;;;;SDD3BF,iBAAiB;AAW9B,OAAM,SAAUQ,iBAAiBA,CAAA;EAC/B,OAAQsB,OAAwB,IAA6B;IAC3D,MAAMC,KAAK,GAAWD,OAAO,CAACC,KAAK;IAEnC,MAAMC,YAAY,GAAG,OAAO;IAC5B,IAAI,CAACA,YAAY,CAACC,IAAI,CAACF,KAAK,CAAC,EAAE;MAC7B,OAAO;QAAEG,OAAO,EAAE;MAAI,CAAE;;IAG1B,MAAMC,WAAW,GAAG,OAAO;IAC3B,IAAI,CAACA,WAAW,CAACF,IAAI,CAACF,KAAK,CAAC,EAAE;MAC5B,OAAO;QAAEK,MAAM,EAAE;MAAI,CAAE;;IAGzB,MAAMC,gBAAgB,GAAG,uCAAuC;IAChE,IAAI,CAACA,gBAAgB,CAACJ,IAAI,CAACF,KAAK,CAAC,EAAE;MACjC,OAAO;QAAEO,WAAW,EAAE;MAAI,CAAE;;IAG9B,OAAO,IAAI;EACb,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}