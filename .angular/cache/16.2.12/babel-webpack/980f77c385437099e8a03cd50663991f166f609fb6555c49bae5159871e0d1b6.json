{"ast":null,"code":"import { distributionTypesEnumMappings } from '../enum';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/expense.service\";\nimport * as i2 from \"src/app/services/group.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nfunction CreateExpenseComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currency_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(currency_r5);\n  }\n}\nfunction CreateExpenseComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r6);\n  }\n}\nfunction CreateExpenseComponent_ng_container_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", groupMember_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", groupMember_r7.username, \" \");\n  }\n}\nfunction CreateExpenseComponent_ng_container_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const distributionType_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", distributionType_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(distributionType_r8);\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 29)(2, \"div\", 30)(3, \"label\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 32);\n    i0.ɵɵlistener(\"change\", function CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const groupMember_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.toggleSelection(groupMember_r10.id));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r10 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", groupMember_r10.username, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", groupMember_r10.id);\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CreateExpenseComponent_ng_container_50_ng_container_1_Template, 6, 2, \"ng-container\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.groupMembers);\n  }\n}\nclass CreateExpenseComponent {\n  onChange(value) {}\n  logData() {}\n  constructor(expenseService, groupService, location, route, formBuilder) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.location = location;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.createGroupForm = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      distributionType: new FormControl(),\n      amount: new FormControl(''),\n      currency: new FormControl(''),\n      paidBy: new FormControl(''),\n      category: new FormControl(''),\n      members: new FormControl('')\n    });\n    this.formData = {\n      expenseName: '',\n      description: '',\n      distributionType: ''\n    };\n    this.selectedGroupMembers = [];\n    this.distributionTypes = Object.values(distributionTypesEnumMappings);\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseCategories().subscribe(result => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId);\n    console.log('Group ID:', this.groupId);\n    this.groupService.getGroupMembers(this.groupId).subscribe(result => {\n      this.groupMembers = result;\n    });\n    this.expenseService.getCurrencies().subscribe(result => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n    // this.createGroupForm = this.formBuilder.group({\n    //   category: [this.categories[0]]\n    // })\n  }\n\n  toggleSelection(userId) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(item => item !== userId);\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n  goBack() {\n    this.location.back();\n  }\n  submitForm() {\n    console.log('Form data:', this.createGroupForm.value);\n    // Add your form submission logic here\n  }\n  static #_ = this.ɵfac = function CreateExpenseComponent_Factory(t) {\n    return new (t || CreateExpenseComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateExpenseComponent,\n    selectors: [[\"app-create-expense\"]],\n    decls: 54,\n    vars: 8,\n    consts: [[1, \"row\", \"mb-4\", \"mt-4\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\", \"text-center\"], [1, \"display-4\"], [1, \"row\"], [1, \"col\"], [1, \"col-md-5\"], [3, \"formGroup\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"type\", \"number\", \"inputmode\", \"numeric\", \"placeholder\", \"Spent amount\", \"id\", \"amount\", \"name\", \"amount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"for\", \"currency\"], [\"type\", \"text\", \"id\", \"currency\", \"name\", \"currency\", \"formControlName\", \"currency\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"category\"], [\"aria-label\", \"Default select example\", \"id\", \"category\", \"name\", \"category\", \"formControlName\", \"category\", 1, \"form-select\"], [\"for\", \"description\"], [\"name\", \"description\", \"title\", \"description\", \"id\", \"\", \"placeholder\", \"Give a description...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"payer\", 1, \"form-select\"], [4, \"ngFor\", \"ngForOf\"], [\"title\", \"splittingMethod\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [3, \"id\"], [1, \"form-check\", \"form-check-reverse\", \"card\", \"mb-2\"], [1, \"card-body\", \"d-flex\", \"justify-content-between\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"value\", \"change\"]],\n    template: function CreateExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_2_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \"Add new expense\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"form\", 9)(11, \"div\", 10)(12, \"label\", 11);\n        i0.ɵɵtext(13, \"Expense name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"div\", 7)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 15);\n        i0.ɵɵelementContainerStart(24);\n        i0.ɵɵtemplate(25, CreateExpenseComponent_option_25_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 17)(27, \"label\", 18);\n        i0.ɵɵtext(28, \"Expense category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 19);\n        i0.ɵɵtemplate(30, CreateExpenseComponent_option_30_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 17)(32, \"label\", 20);\n        i0.ɵɵtext(33, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"textarea\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateExpenseComponent_Template_textarea_ngModelChange_34_listener($event) {\n          return ctx.formData.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 1)(37, \"p\");\n        i0.ɵɵtext(38, \"Paid by\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 7)(40, \"select\", 22);\n        i0.ɵɵtemplate(41, CreateExpenseComponent_ng_container_41_Template, 3, 2, \"ng-container\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 1)(43, \"p\");\n        i0.ɵɵtext(44, \"and split\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 7)(46, \"select\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateExpenseComponent_Template_select_ngModelChange_46_listener($event) {\n          return ctx.formData.distributionType = $event;\n        })(\"change\", function CreateExpenseComponent_Template_select_change_46_listener() {\n          return ctx.logData();\n        });\n        i0.ɵɵtemplate(47, CreateExpenseComponent_ng_container_47_Template, 3, 2, \"ng-container\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 6)(49, \"div\", 7);\n        i0.ɵɵtemplate(50, CreateExpenseComponent_ng_container_50_Template, 2, 1, \"ng-container\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_51_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(52, \" Create \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(53, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.createGroupForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.description);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupMembers);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.distributionType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.distributionTypes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.formData.distributionType === \"equally\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CreateExpenseComponent };","map":{"version":3,"names":["distributionTypesEnumMappings","FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","currency_r5","ɵɵadvance","ɵɵtextInterpolate","category_r6","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵpropertyInterpolate","groupMember_r7","id","ɵɵtextInterpolate1","username","distributionType_r8","ɵɵlistener","CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener","restoredCtx","ɵɵrestoreView","_r12","groupMember_r10","$implicit","ctx_r11","ɵɵnextContext","ɵɵresetView","toggleSelection","ɵɵtemplate","CreateExpenseComponent_ng_container_50_ng_container_1_Template","ctx_r4","groupMembers","CreateExpenseComponent","onChange","value","logData","constructor","expenseService","groupService","location","route","formBuilder","createGroupForm","name","description","distributionType","amount","currency","paidBy","category","members","formData","expenseName","selectedGroupMembers","distributionTypes","Object","values","ngOnInit","getExpenseCategories","subscribe","result","categories","console","log","groupId","snapshot","paramMap","get","parseInt","getGroupMembers","getCurrencies","currencies","userId","includes","filter","item","push","goBack","back","submitForm","_","ɵɵdirectiveInject","i1","ExpenseService","i2","GroupService","i3","Location","i4","ActivatedRoute","i5","FormBuilder","_2","selectors","decls","vars","consts","template","CreateExpenseComponent_Template","rf","ctx","CreateExpenseComponent_Template_button_click_2_listener","ɵɵelement","CreateExpenseComponent_option_25_Template","CreateExpenseComponent_option_30_Template","CreateExpenseComponent_Template_textarea_ngModelChange_34_listener","$event","CreateExpenseComponent_ng_container_41_Template","CreateExpenseComponent_Template_select_ngModelChange_46_listener","CreateExpenseComponent_Template_select_change_46_listener","CreateExpenseComponent_ng_container_47_Template","CreateExpenseComponent_ng_container_50_Template","CreateExpenseComponent_Template_button_click_51_listener"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { distributionTypesEnumMappings as distributionTypesEnumMappings } from '../enum';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css'],\n})\nexport class CreateExpenseComponent implements OnInit {\n  onChange(value: any) {\n    \n  }\n  logData() {\n    \n  }\n  createGroupForm = new FormGroup({\n    name: new FormControl(''),\n    description: new FormControl(''),\n    distributionType: new FormControl(),\n    amount: new FormControl(''),\n    currency: new FormControl(''),\n    paidBy: new FormControl(''),\n    category: new FormControl(''),\n    members: new FormControl(''),\n  })\n  formData = {\n    expenseName: '',\n    description: '',\n    distributionType: '',\n  };\n  groupMembers!: { id: number; username: string }[];\n  selectedGroupMembers: number[] = [];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes: string[] = Object.values(distributionTypesEnumMappings);\n  currencies!: string[];\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private location: Location,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseCategories().subscribe((result) => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId!);\n    console.log('Group ID:', this.groupId);\n\n    this.groupService.getGroupMembers(this.groupId).subscribe((result) => {\n      this.groupMembers = result;\n    });\n\n    this.expenseService.getCurrencies().subscribe((result) => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n    // this.createGroupForm = this.formBuilder.group({\n    //   category: [this.categories[0]]\n    // })\n  }\n\n  toggleSelection(userId: number) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(\n        (item) => item !== userId\n      );\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  submitForm(): void {\n    console.log('Form data:', this.createGroupForm.value);\n    // Add your form submission logic here\n  }\n}\n","<div class=\"row mb-4 mt-4\">\n  <div class=\"col-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary rounded-circle\"\n      title=\"Back\"\n      (click)=\"goBack()\"\n    >\n      <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n    </button>\n  </div>\n  <div class=\"col text-center\">\n    <span class=\"display-4\">Add new expense</span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col-md-5\">\n    <form [formGroup]=\"createGroupForm\">\n      <div class=\"form-group mb-2\">\n        <label for=\"name\">Expense name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          formControlName=\"name\"\n        />\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <label for=\"name\">Amount</label>\n          <input\n            type=\"number\"\n            inputmode=\"numeric\"\n            class=\"form-control\"\n            placeholder=\"Spent amount\"\n            id=\"amount\"\n            name=\"amount\"\n            formControlName=\"amount\"\n          />\n        </div>\n        <div class=\"col\">\n          <label for=\"currency\">Currency</label>\n          <select\n            type=\"text\"\n            class=\"form-control\"\n            id=\"currency\"\n            name=\"currency\"\n            formControlName=\"currency\"\n          >\n            <ng-container >\n              <option *ngFor=\"let currency of currencies\" [value]=\"currency\">{{ currency }}</option>\n            </ng-container>\n          </select>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category\">Expense category</label>\n        <select\n          class=\"form-select\"\n          aria-label=\"Default select example\"\n          id=\"category\"\n          name=\"category\"\n          formControlName=\"category\"\n        >\n        <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          name=\"description\"\n          title=\"description\"\n          id=\"\"\n          class=\"form-control\"\n          placeholder=\"Give a description...\"\n          [(ngModel)]=\"formData.description\"\n        ></textarea>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <p>Paid by</p>\n        </div>\n        <div class=\"col\">\n          <select class=\"form-select\" title=\"payer\">\n            <ng-container *ngFor=\"let groupMember of groupMembers\">\n              <option id=\"{{ groupMember.id }}\">\n                {{ groupMember.username }}\n              </option>\n            </ng-container>\n          </select>\n        </div>\n        <div class=\"col-auto\">\n          <p>and split</p>\n        </div>\n        <div class=\"col\">\n          <select\n            class=\"form-select\"\n            title=\"splittingMethod\"\n            [(ngModel)]=\"formData.distributionType\"\n            (change)=\"logData()\"\n          >\n            <ng-container *ngFor=\"let distributionType of distributionTypes\">\n              <option [value]=\"distributionType\">{{ distributionType }}</option>\n            </ng-container>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ng-container *ngIf=\"formData.distributionType === 'equally'\">\n            <ng-container *ngFor=\"let groupMember of groupMembers\">\n              <div class=\"form-check form-check-reverse card mb-2\">\n                <div class=\"card-body d-flex justify-content-between\">\n                  <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                    {{ groupMember.username }}\n                  </label>\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    [value]=\"groupMember.id\"\n                    id=\"flexCheckDefault\"\n                    (change)=\"toggleSelection(groupMember.id)\"\n                  />\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitForm()\">\n        Create\n      </button>\n    </form>\n  </div>\n  <div class=\"col\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}