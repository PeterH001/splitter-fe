{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/expense.service\";\nimport * as i2 from \"src/app/services/group.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nclass EditExpenseComponent {\n  constructor(expenseService, groupService, route, router, location) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.route = route;\n    this.router = router;\n    this.location = location;\n    this.editExpenseForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n      groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n      amount: new FormControl('', Validators.required),\n      currency: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      distributionType: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      userIds: new FormControl([], [Validators.required, Validators.minLength(1)]),\n      proportionalDebtsData: new FormControl([], [percentSumValidator('distributionType')]),\n      exactAmountsDebtData: new FormControl([], [amountSumValidator('distributionType', 'amount')])\n    });\n    this.selectedGroupMembers = [];\n    this.proportionalMembers = [];\n    this.exactAmountsMembers = [];\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseById.s;\n  }\n  goBack() {\n    this.location.back();\n  }\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n  static #_ = this.ɵfac = function EditExpenseComponent_Factory(t) {\n    return new (t || EditExpenseComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Location));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditExpenseComponent,\n    selectors: [[\"app-edit-expense\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[1, \"row\", \"mb-4\", \"mt-2\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\"], [1, \"text-center\"]],\n    template: function EditExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function EditExpenseComponent_Template_button_click_2_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"h1\", 5);\n        i0.ɵɵtext(6, \"Edit group\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditExpenseComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","amountSumValidator","percentSumValidator","EditExpenseComponent","constructor","expenseService","groupService","route","router","location","editExpenseForm","name","required","payerId","min","groupId","amount","currency","category","distributionType","description","userIds","minLength","proportionalDebtsData","exactAmountsDebtData","selectedGroupMembers","proportionalMembers","exactAmountsMembers","ngOnInit","getExpenseById","s","goBack","back","get","_","i0","ɵɵdirectiveInject","i1","ExpenseService","i2","GroupService","i3","ActivatedRoute","Router","i4","Location","_2","selectors","decls","vars","consts","template","EditExpenseComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EditExpenseComponent_Template_button_click_2_listener","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.css'],\n})\nexport class EditExpenseComponent implements OnInit {\n  editExpenseForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n    groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n    amount: new FormControl('', Validators.required),\n    currency: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    distributionType: new FormControl('', Validators.required),\n    description: new FormControl(''),\n    userIds: new FormControl<number[]>(\n      [],\n      [Validators.required, Validators.minLength(1)]\n    ),\n    proportionalDebtsData: new FormControl<\n      { userId: number; percent: number }[]\n    >([], [percentSumValidator('distributionType')]),\n    exactAmountsDebtData: new FormControl<{ userId: number; amount: number }[]>(\n      [],\n      [amountSumValidator('distributionType', 'amount')]\n    ),\n  });\n\n  groupMembers!: { id: number; username: string }[];\n  selectedGroupMembers: number[] = [];\n  proportionalMembers: { userId: number; percent: number }[] = [];\n  exactAmountsMembers: { userId: number; amount: number }[] = [];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes!: string[];\n  currencies!: string[];\n\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseById.s;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n}\n","<div class=\"row mb-4 mt-2\">\n    <div class=\"col-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary rounded-circle\"\n        title=\"Back\"\n        (click)=\"goBack()\"\n      >\n        <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n      </button>\n    </div>\n    <div class=\"col\">\n      <h1 class=\"text-center\">Edit group</h1>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}