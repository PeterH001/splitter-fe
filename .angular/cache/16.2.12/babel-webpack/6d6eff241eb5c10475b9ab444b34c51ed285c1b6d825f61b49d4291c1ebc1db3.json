{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass GroupService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/group';\n    this.headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem());\n  }\n  getMyGroups() {\n    return this.http.get(this.baseUrl + '/mygroups', {\n      headers: {}\n    });\n  }\n  static #_ = this.ɵfac = function GroupService_Factory(t) {\n    return new (t || GroupService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GroupService,\n    factory: GroupService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { GroupService };","map":{"version":3,"names":["HttpHeaders","GroupService","constructor","http","baseUrl","headers","set","localStorage","getItem","getMyGroups","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\services\\group.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GroupService {\n  baseUrl: string = 'http://localhost:3000/group';\n  constructor(private http: HttpClient) {}\n   const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem())\n   getMyGroups() {\n     return this.http.get(this.baseUrl + '/mygroups',{headers:{}});\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAW,6BAA6B;IAExC,KAAAC,OAAO,GAAG,IAAIL,WAAW,EAAE,CAACM,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,EAAE,CAAC;EADpD;EAEtCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,OAAO,GAAG,WAAW,EAAC;MAACC,OAAO,EAAC;IAAE,CAAC,CAAC;EAChE;EAAC,QAAAM,CAAA,G;qBANUV,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZf,YAAY;IAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPlB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}