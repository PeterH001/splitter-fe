{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/group.service\";\nimport * as i4 from \"src/app/services/user.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nfunction EditGroupComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditGroupComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, EditGroupComponent_div_32_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.groupName == null ? null : ctx_r0.groupName.errors == null ? null : ctx_r0.groupName.errors[\"required\"]);\n  }\n}\nfunction EditGroupComponent_ng_container_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const member_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", member_r4.username, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction EditGroupComponent_ng_container_41_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 36);\n    i0.ɵɵelementStart(2, \"label\", 37)(3, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function EditGroupComponent_ng_container_41_ng_container_7_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const user_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.toggleSelection(user_r7.id));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox\", user_r7.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"checkbox\", user_r7.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx_r6.isChecked(user_r7.id)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r7.username);\n  }\n}\nfunction EditGroupComponent_ng_container_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function EditGroupComponent_ng_container_41_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.isCollapsed = !ctx_r10.isCollapsed);\n    });\n    i0.ɵɵtext(3, \" Add users \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 33, 34);\n    i0.ɵɵlistener(\"ngbCollapseChange\", function EditGroupComponent_ng_container_41_Template_div_ngbCollapseChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.isCollapsed = $event);\n    });\n    i0.ɵɵelementStart(6, \"ul\", 35);\n    i0.ɵɵtemplate(7, EditGroupComponent_ng_container_41_ng_container_7_Template, 5, 6, \"ng-container\", 26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-expanded\", !ctx_r2.isCollapsed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngbCollapse\", ctx_r2.isCollapsed);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.users);\n  }\n}\nclass EditGroupComponent {\n  constructor(location, route, groupService, userService) {\n    this.location = location;\n    this.route = route;\n    this.groupService = groupService;\n    this.userService = userService;\n    this.isCollapsed = true;\n    this.editGroupForm = new FormGroup({\n      groupName: new FormControl('', Validators.required),\n      userIds: new FormControl([])\n    });\n    this.selectedUsers = [];\n  }\n  ngOnInit() {\n    this.id = +this.route.snapshot.paramMap.get('id');\n    console.log('id: ', this.id);\n    this.groupService.getGroupById(this.id).subscribe(response => {\n      this.groupDetails = response;\n      console.log(this.groupDetails.name);\n      this.editGroupForm.get('groupName')?.setValue(this.groupDetails.name);\n      const userIds = this.groupDetails.members.map(member => member.id);\n      this.editGroupForm.get('userIds')?.setValue(userIds);\n      console.log(this.editGroupForm.get('userIds')?.value);\n      this.userService.getUsers().subscribe(response => {\n        this.users = response;\n        console.log(this.users);\n        this.users = this.users.filter(user => !this.groupDetails.members.some(member => member.id === user.id));\n        console.log(this.users);\n      });\n    });\n  }\n  toggleSelection(userId) {\n    if (this.selectedUsers.includes(userId)) {\n      this.selectedUsers = this.selectedUsers.filter(item => item !== userId);\n    } else {\n      this.selectedUsers.push(userId);\n    }\n    this.editGroupForm.get('userIds')?.setValue(this.selectedUsers);\n    console.log(\"selectedUsers: \", this.selectedUsers);\n  }\n  isChecked(id) {\n    return this.selectedUsers.find(userId => userId === id) ? true : false;\n  }\n  submitForm() {\n    throw new Error('Method not implemented.');\n  }\n  goBack() {\n    this.location.back();\n  }\n  get groupName() {\n    return this.editGroupForm.get('groupName');\n  }\n  static #_ = this.ɵfac = function EditGroupComponent_Factory(t) {\n    return new (t || EditGroupComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GroupService), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditGroupComponent,\n    selectors: [[\"app-edit-group\"]],\n    decls: 47,\n    vars: 5,\n    consts: [[\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [1, \"row\", \"mb-4\", \"mt-2\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\"], [1, \"text-center\"], [1, \"row\"], [1, \"col-md-5\"], [1, \"row\", \"mb-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", \"name\", \"groupName\", \"formControlName\", \"groupName\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"memberList\"], [\"id\", \"memberList\", 1, \"list-group\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [1, \"alert\", \"alert-danger\"], [1, \"list-group-item\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mb-2\", 3, \"click\"], [3, \"ngbCollapse\", \"ngbCollapseChange\"], [\"collapse\", \"ngbCollapse\"], [1, \"list-group\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\", 1, \"btn-check\", 3, \"id\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"button\", 1, \"list-group-item\", \"list-group-item-action\", 3, \"ngClass\", \"click\"]],\n    template: function EditGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Modal title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtext(8, \" ... \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n        i0.ɵɵtext(11, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵtext(13, \"Understood\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 11)(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function EditGroupComponent_Template_button_click_16_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(17, \"i\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 14)(19, \"h1\", 15);\n        i0.ɵɵtext(20, \"Editgroup\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵelement(22, \"div\", 14);\n        i0.ɵɵelementStart(23, \"div\", 17)(24, \"div\", 18)(25, \"form\", 19);\n        i0.ɵɵlistener(\"ngSubmit\", function EditGroupComponent_Template_form_ngSubmit_25_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(26, \"div\", 18)(27, \"div\", 14)(28, \"div\", 20)(29, \"label\", 21);\n        i0.ɵɵtext(30, \"Group name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 22);\n        i0.ɵɵtemplate(32, EditGroupComponent_div_32_Template, 2, 1, \"div\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 18)(34, \"div\", 14)(35, \"label\", 24);\n        i0.ɵɵtext(36, \"Members\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"ul\", 25);\n        i0.ɵɵtemplate(38, EditGroupComponent_ng_container_38_Template, 3, 1, \"ng-container\", 26);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 18)(40, \"div\", 14);\n        i0.ɵɵtemplate(41, EditGroupComponent_ng_container_41_Template, 8, 3, \"ng-container\", 27);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"button\", 28);\n        i0.ɵɵtext(43, \" Save \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"button\", 29);\n        i0.ɵɵtext(45, \"Delete group\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(46, \"div\", 14);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"formGroup\", ctx.editGroupForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (ctx.groupName == null ? null : ctx.groupName.invalid) && ((ctx.groupName == null ? null : ctx.groupName.dirty) || (ctx.groupName == null ? null : ctx.groupName.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupDetails.members);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.editGroupForm.valid);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i6.NgbCollapse],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditGroupComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","EditGroupComponent_div_32_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","groupName","errors","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate1","member_r4","username","ɵɵelement","ɵɵlistener","EditGroupComponent_ng_container_41_ng_container_7_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r9","user_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","toggleSelection","id","ɵɵpropertyInterpolate1","ɵɵpureFunction1","_c0","ctx_r6","isChecked","ɵɵtextInterpolate","EditGroupComponent_ng_container_41_Template_button_click_2_listener","_r11","ctx_r10","isCollapsed","EditGroupComponent_ng_container_41_Template_div_ngbCollapseChange_4_listener","$event","ctx_r12","EditGroupComponent_ng_container_41_ng_container_7_Template","ɵɵattribute","ctx_r2","users","EditGroupComponent","constructor","location","route","groupService","userService","editGroupForm","required","userIds","selectedUsers","ngOnInit","snapshot","paramMap","get","console","log","getGroupById","subscribe","response","groupDetails","name","setValue","members","map","member","value","getUsers","filter","user","some","userId","includes","item","push","find","submitForm","Error","goBack","back","_","ɵɵdirectiveInject","i1","Location","i2","ActivatedRoute","i3","GroupService","i4","UserService","_2","selectors","decls","vars","consts","template","EditGroupComponent_Template","rf","ctx","EditGroupComponent_Template_button_click_16_listener","EditGroupComponent_Template_form_ngSubmit_25_listener","EditGroupComponent_div_32_Template","EditGroupComponent_ng_container_38_Template","EditGroupComponent_ng_container_41_Template","invalid","dirty","touched","valid"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\edit-group\\edit-group.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\edit-group\\edit-group.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { AfterContentInit, AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport { GroupService } from 'src/app/services/group.service';\nimport { GroupDTO } from '../dto/group.dto';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-group',\n  templateUrl: './edit-group.component.html',\n  styleUrls: ['./edit-group.component.css'],\n})\nexport class EditGroupComponent implements OnInit {\n  id!: number;\n  isCollapsed = true;\n  groupDetails!: GroupDTO;\n  editGroupForm = new FormGroup({\n    groupName: new FormControl('', Validators.required),\n    userIds: new FormControl<number[]>([]),\n  });\n  users!: { id: number; username: string; }[];\n  selectedUsers: number[] = [];\n  constructor(\n    private location: Location,\n    private route: ActivatedRoute,\n    private groupService: GroupService,\n    private userService: UserService\n  ) {}\n  \n\n  ngOnInit(): void {\n    this.id = +this.route.snapshot.paramMap.get('id')!;\n    console.log('id: ', this.id);\n    this.groupService\n      .getGroupById(this.id)\n      .subscribe((response) =>{ \n        this.groupDetails = response\n        console.log(this.groupDetails.name);\n        this.editGroupForm.get('groupName')?.setValue(this.groupDetails.name);\n        const userIds = this.groupDetails.members.map((member) => member.id);\n        this.editGroupForm.get('userIds')?.setValue(userIds);\n        console.log(this.editGroupForm.get('userIds')?.value);\n        this.userService.getUsers().subscribe(response=>{      \n          this.users = response;\n          console.log(this.users);\n          this.users =  this.users.filter(user=>!this.groupDetails.members.some(member=>member.id === user.id))\n          console.log(this.users);\n          \n        })\n      })\n      \n  }\n\n  toggleSelection(userId: number) {\n    if (this.selectedUsers.includes(userId)) {\n      this.selectedUsers = this.selectedUsers.filter((item) => item !== userId);\n    } else {\n      this.selectedUsers.push(userId);\n    }\n    this.editGroupForm.get('userIds')?.setValue(this.selectedUsers);\n    console.log(\"selectedUsers: \", this.selectedUsers);\n    \n  }\n\n  isChecked(id: number){\n   return  this.selectedUsers.find(userId=> userId === id) ? true : false;\n  }\n  submitForm() {\n    throw new Error('Method not implemented.');\n    }\n  goBack() {\n    this.location.back();\n  }\n  get groupName() {\n    return this.editGroupForm.get('groupName');\n  }\n}\n","<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modal title</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          ...\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Understood</button>\n        </div>\n      </div>\n    </div>\n  </div>\n<div class=\"row mb-4 mt-2\">\n    <div class=\"col-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary rounded-circle\"\n        title=\"Back\"\n        (click)=\"goBack()\"\n      >\n        <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n      </button>\n    </div>\n    <div class=\"col\">\n      <h1 class=\"text-center\">Editgroup</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col-md-5\">\n    <div class=\"row mb-2\">\n        <form [formGroup]=\"editGroupForm\" (ngSubmit)=\"submitForm()\">\n            <div class=\"row mb-2\">\n              <div class=\"col\">\n                <div class=\"form-group\">\n                  <label for=\"groupName\">Group name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"groupName\"\n                    name=\"groupName\"\n                    formControlName=\"groupName\"\n                    required\n                  />\n                  <div\n                    *ngIf=\"\n                      groupName?.invalid && (groupName?.dirty || groupName?.touched)\n                    \"\n                    class=\"alert alert-danger\"\n                  >\n                    <div *ngIf=\"groupName?.errors?.['required']\">\n                      Name is required.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row mb-2\">\n              <div class=\"col\">\n                <label for=\"memberList\">Members</label>\n                  <ul class=\"list-group\" id=\"memberList\">\n                      <ng-container *ngFor=\"let member of groupDetails.members\">\n                          <li class=\"list-group-item\">\n                              {{member.username}}\n                          </li>\n                      </ng-container>\n                    </ul>\n              </div>\n            </div>\n            <div class=\"row mb-2\">\n              <div class=\"col\">\n                <ng-container *ngIf=\"true\">\n                  <!-- TODO: ng bootstrap accordionba tenni, így összecsukható a rengeteg user? -->\n                  <div>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-primary mb-2\"\n                      (click)=\"isCollapsed = !isCollapsed\"\n                      [attr.aria-expanded]=\"!isCollapsed\"\n                    >\n                      Add users\n                    </button>\n                  </div>\n                  <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isCollapsed\">\n                    <ul class=\"list-group\">\n                      <ng-container *ngFor=\"let user of users\">\n                        <input type=\"checkbox\" class=\"btn-check\" id=\"checkbox{{user.id}}\" autocomplete=\"off\">\n                        <label class=\"form-check-label\" for=\"checkbox{{user.id}}\">\n                          <button type=\"button\" class=\"list-group-item list-group-item-action\" [ngClass]=\"{'active': isChecked(user.id)}\" (click)=\"toggleSelection(user.id)\">{{user.username}}</button>\n                        </label>\n                      </ng-container>\n                    </ul>\n                  </div>\n                  \n                </ng-container>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              [disabled]=\"!editGroupForm.valid\"\n            >\n              Save\n            </button>\n          </form>\n    </div>\n    <button type=\"button\" class=\"btn btn-danger\">Delete group</button>\n  </div>\n  <div class=\"col\"></div>\n</div>\n"],"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;ICqD/CC,EAAA,CAAAC,cAAA,UAA6C;IAC3CD,EAAA,CAAAE,MAAA,0BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IARRH,EAAA,CAAAC,cAAA,cAKC;IACCD,EAAA,CAAAI,UAAA,IAAAC,wCAAA,kBAEM;IACRL,EAAA,CAAAG,YAAA,EAAM;;;;IAHEH,EAAA,CAAAM,SAAA,GAAqC;IAArCN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,SAAA,kBAAAD,MAAA,CAAAC,SAAA,CAAAC,MAAA,kBAAAF,MAAA,CAAAC,SAAA,CAAAC,MAAA,aAAqC;;;;;IAWzCV,EAAA,CAAAW,uBAAA,GAA0D;IACtDX,EAAA,CAAAC,cAAA,aAA4B;IACxBD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACTH,EAAA,CAAAY,qBAAA,EAAe;;;;IAFPZ,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAa,kBAAA,MAAAC,SAAA,CAAAC,QAAA,MACJ;;;;;;;;;;;IAqBJf,EAAA,CAAAW,uBAAA,GAAyC;IACvCX,EAAA,CAAAgB,SAAA,gBAAqF;IACrFhB,EAAA,CAAAC,cAAA,gBAA0D;IACwDD,EAAA,CAAAiB,UAAA,mBAAAC,mFAAA;MAAA,MAAAC,WAAA,GAAAnB,EAAA,CAAAoB,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAxB,EAAA,CAAAyB,aAAA;MAAA,OAASzB,EAAA,CAAA0B,WAAA,CAAAF,MAAA,CAAAG,eAAA,CAAAL,OAAA,CAAAM,EAAA,CAAwB;IAAA,EAAC;IAAC5B,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAEjLH,EAAA,CAAAY,qBAAA,EAAe;;;;;IAJ4BZ,EAAA,CAAAM,SAAA,GAAwB;IAAxBN,EAAA,CAAA6B,sBAAA,mBAAAP,OAAA,CAAAM,EAAA,KAAwB;IACjC5B,EAAA,CAAAM,SAAA,GAAyB;IAAzBN,EAAA,CAAA6B,sBAAA,oBAAAP,OAAA,CAAAM,EAAA,KAAyB;IACc5B,EAAA,CAAAM,SAAA,GAA0C;IAA1CN,EAAA,CAAAO,UAAA,YAAAP,EAAA,CAAA8B,eAAA,IAAAC,GAAA,EAAAC,MAAA,CAAAC,SAAA,CAAAX,OAAA,CAAAM,EAAA,GAA0C;IAAoC5B,EAAA,CAAAM,SAAA,GAAiB;IAAjBN,EAAA,CAAAkC,iBAAA,CAAAZ,OAAA,CAAAP,QAAA,CAAiB;;;;;;IAjB9Kf,EAAA,CAAAW,uBAAA,GAA2B;IAEzBX,EAAA,CAAAC,cAAA,UAAK;IAIDD,EAAA,CAAAiB,UAAA,mBAAAkB,oEAAA;MAAAnC,EAAA,CAAAoB,aAAA,CAAAgB,IAAA;MAAA,MAAAC,OAAA,GAAArC,EAAA,CAAAyB,aAAA;MAAA,OAAAzB,EAAA,CAAA0B,WAAA,CAAAW,OAAA,CAAAC,WAAA,IAAAD,OAAA,CAAAC,WAAA;IAAA,EAAoC;IAGpCtC,EAAA,CAAAE,MAAA,kBACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAEXH,EAAA,CAAAC,cAAA,kBAA2D;IAA9BD,EAAA,CAAAiB,UAAA,+BAAAsB,6EAAAC,MAAA;MAAAxC,EAAA,CAAAoB,aAAA,CAAAgB,IAAA;MAAA,MAAAK,OAAA,GAAAzC,EAAA,CAAAyB,aAAA;MAAA,OAAAzB,EAAA,CAAA0B,WAAA,CAAAe,OAAA,CAAAH,WAAA,GAAAE,MAAA;IAAA,EAA6B;IACxDxC,EAAA,CAAAC,cAAA,aAAuB;IACrBD,EAAA,CAAAI,UAAA,IAAAsC,0DAAA,2BAKe;IACjB1C,EAAA,CAAAG,YAAA,EAAK;IAGTH,EAAA,CAAAY,qBAAA,EAAe;;;;IAhBTZ,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAA2C,WAAA,mBAAAC,MAAA,CAAAN,WAAA,CAAmC;IAKVtC,EAAA,CAAAM,SAAA,GAA6B;IAA7BN,EAAA,CAAAO,UAAA,gBAAAqC,MAAA,CAAAN,WAAA,CAA6B;IAEvBtC,EAAA,CAAAM,SAAA,GAAQ;IAARN,EAAA,CAAAO,UAAA,YAAAqC,MAAA,CAAAC,KAAA,CAAQ;;;ADlF7D,MAKaC,kBAAkB;EAU7BC,YACUC,QAAkB,EAClBC,KAAqB,EACrBC,YAA0B,EAC1BC,WAAwB;IAHxB,KAAAH,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IAZrB,KAAAb,WAAW,GAAG,IAAI;IAElB,KAAAc,aAAa,GAAG,IAAItD,SAAS,CAAC;MAC5BW,SAAS,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACsD,QAAQ,CAAC;MACnDC,OAAO,EAAE,IAAIzD,WAAW,CAAW,EAAE;KACtC,CAAC;IAEF,KAAA0D,aAAa,GAAa,EAAE;EAMzB;EAGHC,QAAQA,CAAA;IACN,IAAI,CAAC5B,EAAE,GAAG,CAAC,IAAI,CAACqB,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IAClDC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACjC,EAAE,CAAC;IAC5B,IAAI,CAACsB,YAAY,CACdY,YAAY,CAAC,IAAI,CAAClC,EAAE,CAAC,CACrBmC,SAAS,CAAEC,QAAQ,IAAI;MACtB,IAAI,CAACC,YAAY,GAAGD,QAAQ;MAC5BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,YAAY,CAACC,IAAI,CAAC;MACnC,IAAI,CAACd,aAAa,CAACO,GAAG,CAAC,WAAW,CAAC,EAAEQ,QAAQ,CAAC,IAAI,CAACF,YAAY,CAACC,IAAI,CAAC;MACrE,MAAMZ,OAAO,GAAG,IAAI,CAACW,YAAY,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAAC1C,EAAE,CAAC;MACpE,IAAI,CAACwB,aAAa,CAACO,GAAG,CAAC,SAAS,CAAC,EAAEQ,QAAQ,CAACb,OAAO,CAAC;MACpDM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,aAAa,CAACO,GAAG,CAAC,SAAS,CAAC,EAAEY,KAAK,CAAC;MACrD,IAAI,CAACpB,WAAW,CAACqB,QAAQ,EAAE,CAACT,SAAS,CAACC,QAAQ,IAAE;QAC9C,IAAI,CAACnB,KAAK,GAAGmB,QAAQ;QACrBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,KAAK,CAAC;QACvB,IAAI,CAACA,KAAK,GAAI,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACC,IAAI,IAAE,CAAC,IAAI,CAACT,YAAY,CAACG,OAAO,CAACO,IAAI,CAACL,MAAM,IAAEA,MAAM,CAAC1C,EAAE,KAAK8C,IAAI,CAAC9C,EAAE,CAAC,CAAC;QACrGgC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,KAAK,CAAC;MAEzB,CAAC,CAAC;IACJ,CAAC,CAAC;EAEN;EAEAlB,eAAeA,CAACiD,MAAc;IAC5B,IAAI,IAAI,CAACrB,aAAa,CAACsB,QAAQ,CAACD,MAAM,CAAC,EAAE;MACvC,IAAI,CAACrB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACkB,MAAM,CAAEK,IAAI,IAAKA,IAAI,KAAKF,MAAM,CAAC;KAC1E,MAAM;MACL,IAAI,CAACrB,aAAa,CAACwB,IAAI,CAACH,MAAM,CAAC;;IAEjC,IAAI,CAACxB,aAAa,CAACO,GAAG,CAAC,SAAS,CAAC,EAAEQ,QAAQ,CAAC,IAAI,CAACZ,aAAa,CAAC;IAC/DK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACN,aAAa,CAAC;EAEpD;EAEAtB,SAASA,CAACL,EAAU;IACnB,OAAQ,IAAI,CAAC2B,aAAa,CAACyB,IAAI,CAACJ,MAAM,IAAGA,MAAM,KAAKhD,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK;EACvE;EACAqD,UAAUA,CAAA;IACR,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC1C;EACFC,MAAMA,CAAA;IACJ,IAAI,CAACnC,QAAQ,CAACoC,IAAI,EAAE;EACtB;EACA,IAAI3E,SAASA,CAAA;IACX,OAAO,IAAI,CAAC2C,aAAa,CAACO,GAAG,CAAC,WAAW,CAAC;EAC5C;EAAC,QAAA0B,CAAA,G;qBA/DUvC,kBAAkB,EAAA9C,EAAA,CAAAsF,iBAAA,CAAAC,EAAA,CAAAC,QAAA,GAAAxF,EAAA,CAAAsF,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAA1F,EAAA,CAAAsF,iBAAA,CAAAK,EAAA,CAAAC,YAAA,GAAA5F,EAAA,CAAAsF,iBAAA,CAAAO,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBjD,kBAAkB;IAAAkD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb/BtG,EAAA,CAAAC,cAAA,aAAsK;QAItGD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACtEH,EAAA,CAAAgB,SAAA,gBAA4F;QAC9FhB,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACtBD,EAAA,CAAAE,MAAA,YACF;QAAAF,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAA0B;QACgDD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtFH,EAAA,CAAAC,cAAA,iBAA8C;QAAAD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAK3EH,EAAA,CAAAC,cAAA,eAA2B;QAMnBD,EAAA,CAAAiB,UAAA,mBAAAuF,qDAAA;UAAA,OAASD,GAAA,CAAApB,MAAA,EAAQ;QAAA,EAAC;QAElBnF,EAAA,CAAAgB,SAAA,aAAwE;QAC1EhB,EAAA,CAAAG,YAAA,EAAS;QAEXH,EAAA,CAAAC,cAAA,eAAiB;QACSD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAG1CH,EAAA,CAAAC,cAAA,eAAiB;QACjBD,EAAA,CAAAgB,SAAA,eAAuB;QACvBhB,EAAA,CAAAC,cAAA,eAAsB;QAEkBD,EAAA,CAAAiB,UAAA,sBAAAwF,sDAAA;UAAA,OAAYF,GAAA,CAAAtB,UAAA,EAAY;QAAA,EAAC;QACvDjF,EAAA,CAAAC,cAAA,eAAsB;QAGOD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzCH,EAAA,CAAAgB,SAAA,iBAOE;QACFhB,EAAA,CAAAI,UAAA,KAAAsG,kCAAA,kBASM;QACR1G,EAAA,CAAAG,YAAA,EAAM;QAGVH,EAAA,CAAAC,cAAA,eAAsB;QAEMD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACrCH,EAAA,CAAAC,cAAA,cAAuC;QACnCD,EAAA,CAAAI,UAAA,KAAAuG,2CAAA,2BAIe;QACjB3G,EAAA,CAAAG,YAAA,EAAK;QAGbH,EAAA,CAAAC,cAAA,eAAsB;QAElBD,EAAA,CAAAI,UAAA,KAAAwG,2CAAA,2BAuBe;QACjB5G,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,kBAIC;QACCD,EAAA,CAAAE,MAAA,cACF;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAGjBH,EAAA,CAAAC,cAAA,kBAA6C;QAAAD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEpEH,EAAA,CAAAgB,SAAA,eAAuB;QACzBhB,EAAA,CAAAG,YAAA,EAAM;;;QA9EQH,EAAA,CAAAM,SAAA,IAA2B;QAA3BN,EAAA,CAAAO,UAAA,cAAAgG,GAAA,CAAAnD,aAAA,CAA2B;QAcpBpD,EAAA,CAAAM,SAAA,GAGrB;QAHqBN,EAAA,CAAAO,UAAA,UAAAgG,GAAA,CAAA9F,SAAA,kBAAA8F,GAAA,CAAA9F,SAAA,CAAAoG,OAAA,OAAAN,GAAA,CAAA9F,SAAA,kBAAA8F,GAAA,CAAA9F,SAAA,CAAAqG,KAAA,MAAAP,GAAA,CAAA9F,SAAA,kBAAA8F,GAAA,CAAA9F,SAAA,CAAAsG,OAAA,GAGrB;QAauD/G,EAAA,CAAAM,SAAA,GAAuB;QAAvBN,EAAA,CAAAO,UAAA,YAAAgG,GAAA,CAAAtC,YAAA,CAAAG,OAAA,CAAuB;QAU/CpE,EAAA,CAAAM,SAAA,GAAU;QAAVN,EAAA,CAAAO,UAAA,cAAU;QA6B3BP,EAAA,CAAAM,SAAA,GAAiC;QAAjCN,EAAA,CAAAO,UAAA,cAAAgG,GAAA,CAAAnD,aAAA,CAAA4D,KAAA,CAAiC;;;;;;;SD5FlClE,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}