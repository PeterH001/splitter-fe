{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterComponent_div_12_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username == null ? null : ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Give a valid email adress.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is already taken.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterComponent_div_17_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(2, RegisterComponent_div_17_div_2_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(3, RegisterComponent_div_17_div_3_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"email\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"emailTaken\"]);\n  }\n}\nfunction RegisterComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must contain at least 8 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must contain at least one capital letter \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must contain at least one number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must contain at least one special character \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterComponent_div_22_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(2, RegisterComponent_div_22_div_2_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(3, RegisterComponent_div_22_div_3_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(4, RegisterComponent_div_22_div_4_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(5, RegisterComponent_div_22_div_5_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(6, RegisterComponent_div_22_div_6_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"minLength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.hasError(\"capital\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.hasError(\"number\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.hasError(\"specialChar\"));\n  }\n}\nclass RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, passwordValidator(), minLengthValidator(8)])\n    });\n  }\n  submitForm() {\n    console.log('form value: ', this.registerForm.value);\n    console.log(this.password?.errors);\n    this.authService.register(this.registerForm.value).subscribe(() => {}, error => {\n      if (error.status === 400) {\n        if (error.error.message === 'Email is already taken') {\n          this.registerForm.get('email')?.setErrors({\n            emailTaken: true\n          });\n        } else if (error.error.message === 'Password is already taken') {\n          this.registerForm.get('username')?.setErrors({\n            passwordTaken: true\n          });\n        } else {\n          throw error;\n        }\n      }\n    });\n  }\n  get username() {\n    return this.registerForm.get('username');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 25,\n    vars: 4,\n    consts: [[1, \"row\", \"mb-4\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"display-4\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"autocomplete\", \"new-password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 4, 3, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 14);\n        i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 7, 6, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵtext(24, \"Register\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.username == null ? null : ctx.username.invalid) && ((ctx.username == null ? null : ctx.username.dirty) || (ctx.username == null ? null : ctx.username.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && ((ctx.email == null ? null : ctx.email.dirty) || (ctx.email == null ? null : ctx.email.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && ((ctx.password == null ? null : ctx.password.dirty) || (ctx.password == null ? null : ctx.password.touched)));\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RegisterComponent };\nexport function passwordValidator() {\n  return control => {\n    const value = control.value;\n    const capitalRegex = /[A-Z]/;\n    if (!capitalRegex.test(value)) {\n      return {\n        capital: true\n      };\n    }\n    const numberRegex = /[0-9]/;\n    if (!numberRegex.test(value)) {\n      return {\n        number: true\n      };\n    }\n    const specialCharRegex = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    if (!specialCharRegex.test(value)) {\n      return {\n        specialChar: true\n      };\n    }\n    return null;\n  };\n}\nexport function minLengthValidator(minLength) {\n  return control => {\n    const value = control.value;\n    if (!value || value.length < minLength) {\n      return {\n        minLength: {\n          requiredLength: minLength,\n          actualLength: value ? value.length : 0\n        }\n      };\n    }\n    return null;\n  };\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","RegisterComponent_div_12_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","username","errors","RegisterComponent_div_17_div_1_Template","RegisterComponent_div_17_div_2_Template","RegisterComponent_div_17_div_3_Template","ctx_r1","email","RegisterComponent_div_22_div_1_Template","RegisterComponent_div_22_div_2_Template","RegisterComponent_div_22_div_3_Template","RegisterComponent_div_22_div_4_Template","RegisterComponent_div_22_div_5_Template","RegisterComponent_div_22_div_6_Template","ctx_r2","password","hasError","RegisterComponent","constructor","authService","registerForm","required","passwordValidator","minLengthValidator","submitForm","console","log","value","register","subscribe","error","status","message","get","setErrors","emailTaken","passwordTaken","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_7_listener","ɵɵelement","RegisterComponent_div_12_Template","RegisterComponent_div_17_Template","RegisterComponent_div_22_Template","invalid","dirty","touched","control","capitalRegex","test","capital","numberRegex","number","specialCharRegex","specialChar","minLength","length","requiredLength","actualLength"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\register\\register.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  registerForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      passwordValidator(),\n      minLengthValidator(8),\n    ]),\n  });\n\n  constructor(private authService: AuthService) {}\n\n  submitForm() {\n    console.log('form value: ', this.registerForm.value);\n    console.log(this.password?.errors);\n    this.authService.register(this.registerForm.value).subscribe(\n      ()=>{},\n      (error)=>{\n        if(error.status === 400){\n          if (error.error.message === 'Email is already taken') {\n            this.registerForm.get('email')?.setErrors({ emailTaken: true });\n          } else if (error.error.message === 'Password is already taken') {\n            this.registerForm.get('username')?.setErrors({ passwordTaken: true });\n          }\n          else{\n            throw error;\n          }\n        }\n      }\n    )\n  }\n\n  get username() {\n    return this.registerForm.get('username');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n}\n\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const value: string = control.value;\n\n    const capitalRegex = /[A-Z]/;\n    if (!capitalRegex.test(value)) {\n      return { capital: true };\n    }\n\n    const numberRegex = /[0-9]/;\n    if (!numberRegex.test(value)) {\n      return { number: true };\n    }\n\n    const specialCharRegex = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    if (!specialCharRegex.test(value)) {\n      return { specialChar: true };\n    }\n\n    return null;\n  };\n}\n\nexport function minLengthValidator(minLength: number): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const value: string = control.value;\n\n    if (!value || value.length < minLength) {\n      return {\n        minLength: {\n          requiredLength: minLength,\n          actualLength: value ? value.length : 0,\n        },\n      };\n    }\n\n    return null;\n  };\n}\n","<div class=\"row mb-4\">\n  <div class=\"col\">\n    <div class=\"d-flex justify-content-center\">\n      <span class=\"display-4\">Register</span>\n    </div>\n  </div>\n</div>\n<div class=\"row d-flex justify-content-center\">\n  <div class=\"col-md-4\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submitForm()\">\n      <div class=\"form-group mb-2\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          name=\"username\"\n          formControlName=\"username\"\n          required\n        />\n        <div\n          *ngIf=\"username?.invalid && (username?.dirty || username?.touched)\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"username?.errors?.['required']\">Name is required.</div>\n        </div>\n      </div>\n      <div class=\"form-group mb-2\">\n        <label for=\"email\">Email address</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          formControlName=\"email\"\n          required\n        />\n        <div\n          *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"email?.errors?.['required']\">Email is required.</div>\n          <div *ngIf=\"email?.errors?.['email']\">Give a valid email adress.</div>\n          <div *ngIf=\"email?.errors?.['emailTaken']\">Email is already taken.</div>\n        </div>\n      </div>\n      <div class=\"form-group mb-2\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          autocomplete=\"new-password\"\n          class=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          formControlName=\"password\"\n          required\n        />\n        <div\n          *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"password?.errors?.['required']\">\n            Password is required.\n          </div>\n          <div *ngIf=\"password?.errors?.['minLength']\">Password must contain at least 8 characters.</div>\n          <div *ngIf=\"password?.hasError('required')\">Password is required</div>\n          <div *ngIf=\"password?.hasError('capital')\">\n            Password must contain at least one capital letter\n          </div>\n          <div *ngIf=\"password?.hasError('number')\">\n            Password must contain at least one number\n          </div>\n          <div *ngIf=\"password?.hasError('specialChar')\">\n            Password must contain at least one special character\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}