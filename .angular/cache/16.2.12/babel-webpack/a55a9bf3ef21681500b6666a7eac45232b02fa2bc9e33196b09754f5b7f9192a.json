{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserRole } from '../constants';\nlet HeaderComponent = class HeaderComponent {\n  constructor(router, authService, userService) {\n    this.router = router;\n    this.authService = authService;\n    this.userService = userService;\n    this.admin = UserRole.ADMIN;\n    this.user = UserRole.USER;\n  }\n  ngOnInit() {\n    this.isLoggedin();\n    console.log(this.isLoggedin());\n  }\n  isHomeScreen() {\n    return this.router.url === '/home';\n  }\n  isLoggedin() {\n    return this.authService.isLoggedIn();\n  }\n  logout() {\n    this.authService.clear();\n    if (!this.isLoggedin()) {\n      this.router.navigate(['/home']);\n    }\n  }\n  roleMatch(role) {\n    return this.userService.roleMatch(role);\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","UserRole","HeaderComponent","constructor","router","authService","userService","admin","ADMIN","user","USER","ngOnInit","isLoggedin","console","log","isHomeScreen","url","isLoggedIn","logout","clear","navigate","roleMatch","role","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\header\\header.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/user.service';\nimport { UserRole } from '../constants';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit{\n  admin: string = UserRole.ADMIN;\n  user: string = UserRole.USER;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n  ngOnInit(): void {\n    this.isLoggedin();\n    console.log(this.isLoggedin());\n    \n  }\n\n  isHomeScreen(): boolean {\n    return this.router.url === '/home';\n  }\n  isLoggedin() {\n    return this.authService.isLoggedIn();\n  }\n\n  logout() {\n    this.authService.clear();\n    if (!this.isLoggedin()) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  roleMatch(role: string[]) {\n    \n    return this.userService.roleMatch(role);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,QAAQ,QAAQ,cAAc;AAOvC,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAI1BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,WAAwB;IAFxB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,KAAK,GAAWN,QAAQ,CAACO,KAAK;IAC9B,KAAAC,IAAI,GAAWR,QAAQ,CAACS,IAAI;EAMzB;EACHC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;IACjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,EAAE,CAAC;EAEhC;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACX,MAAM,CAACY,GAAG,KAAK,OAAO;EACpC;EACAJ,UAAUA,CAAA;IACR,OAAO,IAAI,CAACP,WAAW,CAACY,UAAU,EAAE;EACtC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACb,WAAW,CAACc,KAAK,EAAE;IACxB,IAAI,CAAC,IAAI,CAACP,UAAU,EAAE,EAAE;MACtB,IAAI,CAACR,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAEAC,SAASA,CAACC,IAAc;IAEtB,OAAO,IAAI,CAAChB,WAAW,CAACe,SAAS,CAACC,IAAI,CAAC;EACzC;CACD;AAjCYpB,eAAe,GAAAqB,UAAA,EAL3BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWxB,eAAe,CAiC3B;SAjCYA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}