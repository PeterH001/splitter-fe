{"ast":null,"code":"import { distributionTypesEnumMappings } from '../enum';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/expense.service\";\nimport * as i2 from \"src/app/services/group.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nfunction CreateExpenseComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateExpenseComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is too short.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateExpenseComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, CreateExpenseComponent_div_15_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, CreateExpenseComponent_div_15_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minLength\"]);\n  }\n}\nfunction CreateExpenseComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currency_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", currency_r8, \" \");\n  }\n}\nfunction CreateExpenseComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r9, \" \");\n  }\n}\nfunction CreateExpenseComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", groupMember_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", groupMember_r10.username, \" \");\n  }\n}\nfunction CreateExpenseComponent_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const distributionType_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", distributionType_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", distributionType_r11, \" \");\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 30)(2, \"div\", 31)(3, \"label\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 33);\n    i0.ɵɵlistener(\"change\", function CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const groupMember_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.toggleSelection(groupMember_r13.id));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r13 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", groupMember_r13.username, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", groupMember_r13.id);\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CreateExpenseComponent_ng_container_50_ng_container_1_Template, 6, 2, \"ng-container\", 29);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.groupMembers);\n  }\n}\nclass CreateExpenseComponent {\n  onChange(value) {}\n  logData() {}\n  constructor(expenseService, groupService, location, route) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.location = location;\n    this.route = route;\n    this.createGroupForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      paidBy: new FormControl('', Validators.required),\n      groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n      amount: new FormControl('', Validators.required),\n      currency: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      distributionType: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      members: new FormControl([], Validators.required)\n    });\n    this.selectedGroupMembers = [];\n    this.distributionTypes = Object.values(distributionTypesEnumMappings);\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseCategories().subscribe(result => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId);\n    const groupIdControl = this.createGroupForm.get('groupId');\n    if (groupIdControl !== null) {\n      groupIdControl.setValue(this.groupId);\n    }\n    this.groupService.getGroupMembers(this.groupId).subscribe(result => {\n      this.groupMembers = result;\n    });\n    this.expenseService.getCurrencies().subscribe(result => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n    // this.createGroupForm = this.formBuilder.group({\n    //   category: [this.categories[0]]\n    // })\n  }\n\n  toggleSelection(userId) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(item => item !== userId);\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    this.createGroupForm.get('members')?.setValue(this.selectedGroupMembers);\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n  goBack() {\n    this.location.back();\n  }\n  submitForm() {\n    console.log('Form data:', this.createGroupForm.value);\n    // Add your form submission logic here\n  }\n\n  get name() {\n    return this.createGroupForm.get('name');\n  }\n  static #_ = this.ɵfac = function CreateExpenseComponent_Factory(t) {\n    return new (t || CreateExpenseComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateExpenseComponent,\n    selectors: [[\"app-create-expense\"]],\n    decls: 54,\n    vars: 7,\n    consts: [[1, \"row\", \"mb-4\", \"mt-4\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\", \"text-center\"], [1, \"display-4\"], [1, \"row\"], [1, \"col\"], [1, \"col-md-5\"], [3, \"formGroup\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"number\", \"min\", \"0\", \"onkeypress\", \"return event.charCode >= 48 && event.charCode <= 57\", \"inputmode\", \"numeric\", \"placeholder\", \"Spent amount\", \"id\", \"amount\", \"name\", \"amount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"for\", \"currency\"], [\"type\", \"text\", \"id\", \"currency\", \"name\", \"currency\", \"formControlName\", \"currency\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"category\"], [\"aria-label\", \"Default select example\", \"id\", \"category\", \"name\", \"category\", \"formControlName\", \"category\", 1, \"form-select\"], [\"for\", \"description\"], [\"name\", \"description\", \"title\", \"description\", \"id\", \"\", \"placeholder\", \"Give a description...\", \"formControlName\", \"description\", 1, \"form-control\"], [\"title\", \"payer\", \"formControlName\", \"paidBy\", 1, \"form-select\"], [\"title\", \"splittingMethod\", \"formControlName\", \"distributionType\", 1, \"form-select\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-check\", \"form-check-reverse\", \"card\", \"mb-2\"], [1, \"card-body\", \"d-flex\", \"justify-content-between\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"value\", \"change\"]],\n    template: function CreateExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_2_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \"Add new expense\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"form\", 9)(11, \"div\", 10)(12, \"label\", 11);\n        i0.ɵɵtext(13, \"Expense name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 12);\n        i0.ɵɵtemplate(15, CreateExpenseComponent_div_15_Template, 3, 2, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"div\", 7)(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 16);\n        i0.ɵɵtemplate(25, CreateExpenseComponent_option_25_Template, 2, 2, \"option\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 18)(27, \"label\", 19);\n        i0.ɵɵtext(28, \"Expense category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 20);\n        i0.ɵɵtemplate(30, CreateExpenseComponent_option_30_Template, 2, 2, \"option\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 18)(32, \"label\", 21);\n        i0.ɵɵtext(33, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"textarea\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 1)(37, \"p\");\n        i0.ɵɵtext(38, \"Paid by\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 7)(40, \"select\", 23);\n        i0.ɵɵtemplate(41, CreateExpenseComponent_option_41_Template, 2, 2, \"option\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 1)(43, \"p\");\n        i0.ɵɵtext(44, \"and split\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 7)(46, \"select\", 24);\n        i0.ɵɵtemplate(47, CreateExpenseComponent_option_47_Template, 2, 2, \"option\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 6)(49, \"div\", 7);\n        i0.ɵɵtemplate(50, CreateExpenseComponent_ng_container_50_Template, 2, 1, \"ng-container\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_51_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(52, \" Create \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(53, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.createGroupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupMembers);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.distributionTypes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CreateExpenseComponent };","map":{"version":3,"names":["distributionTypesEnumMappings","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CreateExpenseComponent_div_15_div_1_Template","CreateExpenseComponent_div_15_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","name","errors","currency_r8","ɵɵtextInterpolate1","category_r9","groupMember_r10","id","username","distributionType_r11","ɵɵelementContainerStart","ɵɵlistener","CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener","restoredCtx","ɵɵrestoreView","_r15","groupMember_r13","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","toggleSelection","ɵɵelementContainerEnd","CreateExpenseComponent_ng_container_50_ng_container_1_Template","ctx_r5","groupMembers","CreateExpenseComponent","onChange","value","logData","constructor","expenseService","groupService","location","route","createGroupForm","required","minLength","paidBy","groupId","min","amount","currency","category","distributionType","description","members","selectedGroupMembers","distributionTypes","Object","values","ngOnInit","getExpenseCategories","subscribe","result","categories","console","log","snapshot","paramMap","get","parseInt","groupIdControl","setValue","getGroupMembers","getCurrencies","currencies","userId","includes","filter","item","push","goBack","back","submitForm","_","ɵɵdirectiveInject","i1","ExpenseService","i2","GroupService","i3","Location","i4","ActivatedRoute","_2","selectors","decls","vars","consts","template","CreateExpenseComponent_Template","rf","ctx","CreateExpenseComponent_Template_button_click_2_listener","ɵɵelement","CreateExpenseComponent_div_15_Template","CreateExpenseComponent_option_25_Template","CreateExpenseComponent_option_30_Template","CreateExpenseComponent_option_41_Template","CreateExpenseComponent_option_47_Template","CreateExpenseComponent_ng_container_50_Template","CreateExpenseComponent_Template_button_click_51_listener","invalid","dirty","touched"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { distributionTypesEnumMappings as distributionTypesEnumMappings } from '../enum';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css'],\n})\nexport class CreateExpenseComponent implements OnInit {\n  onChange(value: any) {}\n  logData() {}\n  createGroupForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    paidBy: new FormControl('', Validators.required),\n    groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n    amount: new FormControl('', Validators.required),\n    currency: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    distributionType: new FormControl('', Validators.required),\n    description: new FormControl(''),\n    members: new FormControl<number[]>([], Validators.required),\n  });\n\n  groupMembers!: { id: number; username: string }[];\n  selectedGroupMembers: number[] = [];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes: string[] = Object.values(distributionTypesEnumMappings);\n  currencies!: string[];\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseCategories().subscribe((result) => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId!);\n    const groupIdControl = this.createGroupForm.get('groupId');\n    if (groupIdControl !== null) {\n      groupIdControl.setValue(this.groupId);\n    }\n\n    this.groupService.getGroupMembers(this.groupId).subscribe((result) => {\n      this.groupMembers = result;\n    });\n\n    this.expenseService.getCurrencies().subscribe((result) => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n    // this.createGroupForm = this.formBuilder.group({\n    //   category: [this.categories[0]]\n    // })\n  }\n\n  toggleSelection(userId: number) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(\n        (item) => item !== userId\n      );\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    this.createGroupForm.get('members')?.setValue(this.selectedGroupMembers);\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  submitForm(): void {\n    console.log('Form data:', this.createGroupForm.value);\n    // Add your form submission logic here\n  }\n  get name() {\n    return this.createGroupForm.get('name');\n  }\n}\n","<div class=\"row mb-4 mt-4\">\n  <div class=\"col-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary rounded-circle\"\n      title=\"Back\"\n      (click)=\"goBack()\"\n    >\n      <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n    </button>\n  </div>\n  <div class=\"col text-center\">\n    <span class=\"display-4\">Add new expense</span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col-md-5\">\n    <form [formGroup]=\"createGroupForm\">\n      <div class=\"form-group mb-2\">\n        <label for=\"name\">Expense name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          formControlName=\"name\"\n          required\n        />\n        <div\n          *ngIf=\"name?.invalid && (name?.dirty || name?.touched)\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"name?.errors?.['required']\">Name is required.</div>\n          <div *ngIf=\"name?.errors?.['minLength']\">Name is too short.</div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <label for=\"name\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\"\n            inputmode=\"numeric\"\n            class=\"form-control\"\n            placeholder=\"Spent amount\"\n            id=\"amount\"\n            name=\"amount\"\n            formControlName=\"amount\"\n          />\n        </div>\n        <div class=\"col\">\n          <label for=\"currency\">Currency</label>\n          <select\n            type=\"text\"\n            class=\"form-control\"\n            id=\"currency\"\n            name=\"currency\"\n            formControlName=\"currency\"\n          >\n            <option *ngFor=\"let currency of currencies\" [value]=\"currency\">\n              {{ currency }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category\">Expense category</label>\n        <select\n          class=\"form-select\"\n          aria-label=\"Default select example\"\n          id=\"category\"\n          name=\"category\"\n          formControlName=\"category\"\n        >\n          <option *ngFor=\"let category of categories\" [value]=\"category\">\n            {{ category }}\n          </option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          name=\"description\"\n          title=\"description\"\n          id=\"\"\n          class=\"form-control\"\n          placeholder=\"Give a description...\"\n          formControlName=\"description\"\n        ></textarea>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <p>Paid by</p>\n        </div>\n        <div class=\"col\">\n          <select class=\"form-select\" title=\"payer\" formControlName=\"paidBy\">\n            <option\n              *ngFor=\"let groupMember of groupMembers\"\n              [value]=\"groupMember.id\"\n            >\n              {{ groupMember.username }}\n            </option>\n          </select>\n        </div>\n        <div class=\"col-auto\">\n          <p>and split</p>\n        </div>\n        <div class=\"col\">\n          <select\n            class=\"form-select\"\n            title=\"splittingMethod\"\n            formControlName=\"distributionType\"\n          >\n            <option\n              *ngFor=\"let distributionType of distributionTypes\"\n              [value]=\"distributionType\"\n            >\n              {{ distributionType }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ng-container *ngIf=\"true\">\n            <ng-container *ngFor=\"let groupMember of groupMembers\">\n              <div class=\"form-check form-check-reverse card mb-2\">\n                <div class=\"card-body d-flex justify-content-between\">\n                  <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                    {{ groupMember.username }}\n                  </label>\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    [value]=\"groupMember.id\"\n                    id=\"flexCheckDefault\"\n                    (change)=\"toggleSelection(groupMember.id)\"\n                  />\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitForm()\">\n        Create\n      </button>\n    </form>\n  </div>\n  <div class=\"col\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}