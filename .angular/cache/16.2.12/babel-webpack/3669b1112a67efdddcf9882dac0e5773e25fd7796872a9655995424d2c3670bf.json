{"ast":null,"code":"import { distributionTypesEnumMappings } from '../enum';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/expense.service\";\nimport * as i2 from \"src/app/services/group.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nfunction CreateExpenseComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const currency_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(currency_r5);\n  }\n}\nfunction CreateExpenseComponent_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r6);\n  }\n}\nfunction CreateExpenseComponent_ng_container_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", groupMember_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(groupMember_r7.username);\n  }\n}\nfunction CreateExpenseComponent_ng_container_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const distributionType_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", distributionType_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(distributionType_r8);\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 30)(2, \"div\", 31)(3, \"label\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 33);\n    i0.ɵɵlistener(\"change\", function CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const groupMember_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.toggleSelection(groupMember_r10.id));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const groupMember_r10 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", groupMember_r10.username, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", groupMember_r10.id);\n  }\n}\nfunction CreateExpenseComponent_ng_container_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CreateExpenseComponent_ng_container_50_ng_container_1_Template, 6, 2, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.groupMembers);\n  }\n}\nclass CreateExpenseComponent {\n  onChange(value) {}\n  logData() {}\n  constructor(expenseService, groupService, location, route) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.location = location;\n    this.route = route;\n    this.createGroupForm = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      distributionType: new FormControl(''),\n      amount: new FormControl(''),\n      currency: new FormControl(''),\n      paidBy: new FormControl(''),\n      category: new FormControl(''),\n      members: new FormControl('')\n    });\n    this.formData = {\n      expenseName: '',\n      description: '',\n      distributionType: ''\n    };\n    this.selectedGroupMembers = [];\n    this.distributionTypes = Object.values(distributionTypesEnumMappings);\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseCategories().subscribe(result => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId);\n    console.log('Group ID:', this.groupId);\n    this.groupService.getGroupMembers(this.groupId).subscribe(result => {\n      this.groupMembers = result;\n    });\n    this.expenseService.getCurrencies().subscribe(result => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n  }\n\n  toggleSelection(userId) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(item => item !== userId);\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n  goBack() {\n    this.location.back();\n  }\n  submitForm() {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n  static #_ = this.ɵfac = function CreateExpenseComponent_Factory(t) {\n    return new (t || CreateExpenseComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateExpenseComponent,\n    selectors: [[\"app-create-expense\"]],\n    decls: 54,\n    vars: 9,\n    consts: [[1, \"row\", \"mb-4\", \"mt-4\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\", \"text-center\"], [1, \"display-4\"], [1, \"row\"], [1, \"col\"], [1, \"col-md-5\"], [3, \"formGroup\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"inputmode\", \"numeric\", \"placeholder\", \"Spent amount\", \"id\", \"amount\", \"name\", \"amount\", 1, \"form-control\"], [\"for\", \"currency\"], [\"type\", \"text\", \"id\", \"currency\", \"name\", \"currency\", 1, \"form-control\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"category\"], [\"aria-label\", \"Default select example\", \"id\", \"category\", \"name\", \"category\", 1, \"form-select\"], [\"for\", \"description\"], [\"name\", \"description\", \"title\", \"description\", \"id\", \"\", \"placeholder\", \"Give a description...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"payer\", 1, \"form-select\"], [\"title\", \"splittingMethod\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"value\", \"currency\"], [\"value\", \"1\"], [3, \"id\"], [3, \"value\"], [1, \"form-check\", \"form-check-reverse\", \"card\", \"mb-2\"], [1, \"card-body\", \"d-flex\", \"justify-content-between\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"value\", \"change\"]],\n    template: function CreateExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_2_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \"Add new expense\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelement(10, \"form\", 9);\n        i0.ɵɵelementStart(11, \"form\")(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Expense name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateExpenseComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.formData.expenseName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"div\", 7)(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 14);\n        i0.ɵɵtext(23, \"Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 15);\n        i0.ɵɵtemplate(25, CreateExpenseComponent_ng_container_25_Template, 3, 1, \"ng-container\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 17)(27, \"label\", 18);\n        i0.ɵɵtext(28, \"Expense category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 19);\n        i0.ɵɵtemplate(30, CreateExpenseComponent_ng_container_30_Template, 3, 1, \"ng-container\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 17)(32, \"label\", 20);\n        i0.ɵɵtext(33, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"textarea\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateExpenseComponent_Template_textarea_ngModelChange_34_listener($event) {\n          return ctx.formData.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 1)(37, \"p\");\n        i0.ɵɵtext(38, \"Paid by\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 7)(40, \"select\", 22);\n        i0.ɵɵtemplate(41, CreateExpenseComponent_ng_container_41_Template, 3, 2, \"ng-container\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 1)(43, \"p\");\n        i0.ɵɵtext(44, \"and split\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 7)(46, \"select\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateExpenseComponent_Template_select_ngModelChange_46_listener($event) {\n          return ctx.formData.distributionType = $event;\n        })(\"change\", function CreateExpenseComponent_Template_select_change_46_listener() {\n          return ctx.logData();\n        });\n        i0.ɵɵtemplate(47, CreateExpenseComponent_ng_container_47_Template, 3, 2, \"ng-container\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 6)(49, \"div\", 7);\n        i0.ɵɵtemplate(50, CreateExpenseComponent_ng_container_50_Template, 2, 1, \"ng-container\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function CreateExpenseComponent_Template_button_click_51_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(52, \" Create \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(53, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.createGroupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.expenseName);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.description);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupMembers);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.distributionType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.distributionTypes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.formData.distributionType === \"equally\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i5.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CreateExpenseComponent };","map":{"version":3,"names":["distributionTypesEnumMappings","FormControl","FormGroup","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","currency_r5","category_r6","ɵɵpropertyInterpolate","groupMember_r7","id","username","ɵɵproperty","distributionType_r8","ɵɵlistener","CreateExpenseComponent_ng_container_50_ng_container_1_Template_input_change_5_listener","restoredCtx","ɵɵrestoreView","_r12","groupMember_r10","$implicit","ctx_r11","ɵɵnextContext","ɵɵresetView","toggleSelection","ɵɵtextInterpolate1","ɵɵtemplate","CreateExpenseComponent_ng_container_50_ng_container_1_Template","ctx_r4","groupMembers","CreateExpenseComponent","onChange","value","logData","constructor","expenseService","groupService","location","route","createGroupForm","name","description","distributionType","amount","currency","paidBy","category","members","formData","expenseName","selectedGroupMembers","distributionTypes","Object","values","ngOnInit","getExpenseCategories","subscribe","result","categories","console","log","groupId","snapshot","paramMap","get","parseInt","getGroupMembers","getCurrencies","currencies","userId","includes","filter","item","push","goBack","back","submitForm","_","ɵɵdirectiveInject","i1","ExpenseService","i2","GroupService","i3","Location","i4","ActivatedRoute","_2","selectors","decls","vars","consts","template","CreateExpenseComponent_Template","rf","ctx","CreateExpenseComponent_Template_button_click_2_listener","ɵɵelement","CreateExpenseComponent_Template_input_ngModelChange_15_listener","$event","CreateExpenseComponent_ng_container_25_Template","CreateExpenseComponent_ng_container_30_Template","CreateExpenseComponent_Template_textarea_ngModelChange_34_listener","CreateExpenseComponent_ng_container_41_Template","CreateExpenseComponent_Template_select_ngModelChange_46_listener","CreateExpenseComponent_Template_select_change_46_listener","CreateExpenseComponent_ng_container_47_Template","CreateExpenseComponent_ng_container_50_Template","CreateExpenseComponent_Template_button_click_51_listener"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { distributionTypesEnumMappings as distributionTypesEnumMappings } from '../enum';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css'],\n})\nexport class CreateExpenseComponent implements OnInit {\n  onChange(value: any) {\n    \n  }\n  logData() {\n    \n  }\n  createGroupForm = new FormGroup({\n    name: new FormControl(''),\n    description: new FormControl(''),\n    distributionType: new FormControl(''),\n    amount: new FormControl(''),\n    currency: new FormControl(''),\n    paidBy: new FormControl(''),\n    category: new FormControl(''),\n    members: new FormControl(''),\n  })\n  formData = {\n    expenseName: '',\n    description: '',\n    distributionType: '',\n  };\n  groupMembers!: { id: number; username: string }[];\n  selectedGroupMembers: number[] = [];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes: string[] = Object.values(distributionTypesEnumMappings);\n  currencies!: string[];\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseCategories().subscribe((result) => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId!);\n    console.log('Group ID:', this.groupId);\n\n    this.groupService.getGroupMembers(this.groupId).subscribe((result) => {\n      this.groupMembers = result;\n    });\n\n    this.expenseService.getCurrencies().subscribe((result) => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n  }\n\n  toggleSelection(userId: number) {\n    if (this.selectedGroupMembers.includes(userId)) {\n      this.selectedGroupMembers = this.selectedGroupMembers.filter(\n        (item) => item !== userId\n      );\n    } else {\n      this.selectedGroupMembers.push(userId);\n    }\n    console.log('this.selectedGroupMembers: ', this.selectedGroupMembers);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  submitForm(): void {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n}\n","<div class=\"row mb-4 mt-4\">\n  <div class=\"col-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary rounded-circle\"\n      title=\"Back\"\n      (click)=\"goBack()\"\n    >\n      <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n    </button>\n  </div>\n  <div class=\"col text-center\">\n    <span class=\"display-4\">Add new expense</span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col-md-5\">\n    <form [formGroup]=\"createGroupForm\"></form>\n    <form>\n      <div class=\"form-group mb-2\">\n        <label for=\"name\">Expense name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          [(ngModel)]=\"formData.expenseName\"\n        />\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <label for=\"name\">Amount</label>\n          <input type=\"number\" inputmode=\"numeric\" class=\"form-control\" placeholder=\"Spent amount\" id=\"amount\" name=\"amount\">\n        </div>\n        <div class=\"col\">\n          <label for=\"currency\">Currency</label>\n          <select type=\"text\" class=\"form-control\" id=\"currency\" name=\"currency\">\n            <ng-container *ngFor=\"let currency of currencies\">\n              <option value=\"currency\">{{currency}}</option>\n            </ng-container>\n          </select>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category\">Expense category</label>\n        <select\n          class=\"form-select\"\n          aria-label=\"Default select example\"\n          id=\"category\"\n          name=\"category\"\n        >\n          <ng-container *ngFor=\"let category of categories\">\n            <option value=\"1\">{{ category }}</option>\n          </ng-container>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          name=\"description\"\n          title=\"description\"\n          id=\"\"\n          class=\"form-control\"\n          placeholder=\"Give a description...\"\n          [(ngModel)]=\"formData.description\"\n        ></textarea>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <p>Paid by</p>\n        </div>\n        <div class=\"col\">\n          <select class=\"form-select\" title=\"payer\">\n            <ng-container *ngFor=\"let groupMember of groupMembers\">\n              <option id=\"{{groupMember.id}}\">{{groupMember.username}}</option>\n            </ng-container>\n          </select>\n        </div>\n        <div class=\"col-auto\">\n          <p>and split</p>\n        </div>\n        <div class=\"col\">\n          <select class=\"form-select\" title=\"splittingMethod\" [(ngModel)]=\"formData.distributionType\" (change)=\"logData()\">\n            <ng-container *ngFor=\"let distributionType of distributionTypes\">\n              <option [value]=\"distributionType\">{{distributionType}}</option>\n            </ng-container>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ng-container *ngIf=\"formData.distributionType === 'equally'\">\n            <ng-container *ngFor=\"let groupMember of groupMembers\">\n              <div class=\"form-check form-check-reverse card mb-2\">\n                <div class=\"card-body d-flex justify-content-between\">\n                  <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                    {{groupMember.username}}\n                  </label>\n                  <input class=\"form-check-input\" type=\"checkbox\" [value]=\"groupMember.id\" id=\"flexCheckDefault\" (change)=\"toggleSelection(groupMember.id)\">\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitForm()\">\n        Create\n      </button>\n    </form>\n  </div>\n  <div class=\"col\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}