{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/group.service\";\nimport * as i4 from \"@angular/forms\";\nfunction EditGroupComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"button\", 16);\n    i0.ɵɵtext(3, \" Add users \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"ul\", 17);\n    i0.ɵɵelementContainerStart(6);\n    i0.ɵɵelement(7, \"input\", 18);\n    i0.ɵɵelementStart(8, \"label\", 19)(9, \"button\", 20);\n    i0.ɵɵtext(10, \" asd \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass EditGroupComponent {\n  constructor(location, route, groupService) {\n    this.location = location;\n    this.route = route;\n    this.groupService = groupService;\n    this.editGroupForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      userIds: new FormControl([])\n    });\n  }\n  ngOnInit() {\n    this.id = +this.route.snapshot.paramMap.get('id');\n    console.log('id: ', this.id);\n    this.groupService.getGroupById(this.id).subscribe(response => this.groupDetails = response);\n    this.editGroupForm;\n  }\n  goBack() {\n    this.location.back();\n  }\n  static #_ = this.ɵfac = function EditGroupComponent_Factory(t) {\n    return new (t || EditGroupComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GroupService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditGroupComponent,\n    selectors: [[\"app-edit-group\"]],\n    decls: 29,\n    vars: 1,\n    consts: [[1, \"row\", \"mb-4\", \"mt-2\"], [1, \"col-auto\"], [\"type\", \"button\", \"title\", \"Back\", 1, \"btn\", \"btn-primary\", \"rounded-circle\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", 2, \"font-size\", \"1.5rem\", \"color\", \"white\"], [1, \"col\"], [1, \"text-center\"], [1, \"row\"], [1, \"col-md-5\"], [1, \"row\", \"mb-2\"], [1, \"form-group\"], [\"for\", \"groupName\"], [\"type\", \"text\", \"id\", \"groupName\", \"name\", \"groupName\", \"formControlName\", \"groupName\", \"required\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"text-muted\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mb-2\"], [1, \"list-group\"], [\"type\", \"checkbox\", \"id\", \"1\", \"autocomplete\", \"off\", 1, \"btn-check\"], [\"for\", \"1\", 1, \"form-check-label\"], [\"type\", \"button\", 1, \"list-group-item\", \"list-group-item-action\"]],\n    template: function EditGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function EditGroupComponent_Template_button_click_2_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"h1\", 5);\n        i0.ɵɵtext(6, \"Editgroup\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"form\")(12, \"div\", 8)(13, \"div\", 4)(14, \"div\", 9)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Group name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 4);\n        i0.ɵɵtemplate(20, EditGroupComponent_ng_container_20_Template, 11, 0, \"ng-container\", 12);\n        i0.ɵɵelementStart(21, \"div\")(22, \"span\", 13);\n        i0.ɵɵtext(23, \"If you don't select any members now, you will be the only member of the group. You can add members later.\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(24, \"button\", 14);\n        i0.ɵɵtext(25, \"Create\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"button\", 15);\n        i0.ɵɵtext(27, \"Delete group\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    dependencies: [i1.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgForm, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditGroupComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","EditGroupComponent","constructor","location","route","groupService","editGroupForm","name","required","userIds","ngOnInit","id","snapshot","paramMap","get","console","log","getGroupById","subscribe","response","groupDetails","goBack","back","_","ɵɵdirectiveInject","i1","Location","i2","ActivatedRoute","i3","GroupService","_2","selectors","decls","vars","consts","template","EditGroupComponent_Template","rf","ctx","ɵɵlistener","EditGroupComponent_Template_button_click_2_listener","ɵɵtemplate","EditGroupComponent_ng_container_20_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\edit-group\\edit-group.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\edit-group\\edit-group.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport { GroupService } from 'src/app/services/group.service';\nimport { GroupDTO } from '../dto/group.dto';\n\n@Component({\n  selector: 'app-edit-group',\n  templateUrl: './edit-group.component.html',\n  styleUrls: ['./edit-group.component.css'],\n})\nexport class EditGroupComponent implements OnInit {\n  id!: number;\n  groupDetails!: GroupDTO;\n  editGroupForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    userIds: new FormControl<number[]>([]),\n  });\n  constructor(\n    private location: Location,\n    private route: ActivatedRoute,\n    private groupService: GroupService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = +this.route.snapshot.paramMap.get('id')!;\n    console.log('id: ', this.id);\n    this.groupService\n      .getGroupById(this.id)\n      .subscribe((response) => this.groupDetails = response);\n      this.editGroupForm\n  }\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"row mb-4 mt-2\">\n  <div class=\"col-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary rounded-circle\"\n      title=\"Back\"\n      (click)=\"goBack()\"\n    >\n      <i class=\"bi bi-arrow-left\" style=\"font-size: 1.5rem; color: white\"></i>\n    </button>\n  </div>\n  <div class=\"col\">\n    <h1 class=\"text-center\">Editgroup</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col-md-5\">\n    <div class=\"row mb-2\">\n      <form>\n        <div class=\"row mb-2\">\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <label for=\"groupName\">Group name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"groupName\"\n                name=\"groupName\"\n                formControlName=\"groupName\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col\">\n            <ng-container *ngIf=\"true\">\n              <!-- TODO: ng bootstrap accordionba tenni, így összecsukható a rengeteg user? -->\n              <div>\n                <button type=\"button\" class=\"btn btn-primary mb-2\">\n                  Add users\n                </button>\n              </div>\n              <div>\n                <ul class=\"list-group\">\n                  <ng-container>\n                    <input\n                      type=\"checkbox\"\n                      class=\"btn-check\"\n                      id=\"1\"\n                      autocomplete=\"off\"\n                    />\n                    <label class=\"form-check-label\" for=\"1\">\n                      <button\n                        type=\"button\"\n                        class=\"list-group-item list-group-item-action\"\n                      >\n                        asd\n                      </button>\n                    </label>\n                  </ng-container>\n                </ul>\n              </div>\n            </ng-container>\n            <div>\n              <span class=\"text-muted\"\n                >If you don't select any members now, you will be the only\n                member of the group. You can add members later.</span\n              >\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n      </form>\n    </div>\n    <button type=\"button\" class=\"btn btn-danger\">Delete group</button>\n  </div>\n  <div class=\"col\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}