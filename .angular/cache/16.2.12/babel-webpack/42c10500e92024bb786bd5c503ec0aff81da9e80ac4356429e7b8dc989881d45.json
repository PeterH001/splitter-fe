{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { distributionTypesEnumMappings } from '../enum';\nlet CreateExpenseComponent = class CreateExpenseComponent {\n  constructor(expenseService, groupService, location, route) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.location = location;\n    this.route = route;\n    this.formData = {\n      expenseName: '',\n      description: ''\n    };\n    this.distributionTypes = Object.values(distributionTypesEnumMappings);\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseCategories().subscribe(result => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId);\n    console.log('Group ID:', this.groupId);\n    this.groupService.getGroupMembers(this.groupId).subscribe(result => {\n      this.groupMembers = result;\n    });\n    this.expenseService.getCurrencies().subscribe(result => {\n      this.currencies = result;\n    });\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n  }\n\n  goBack() {\n    this.location.back();\n  }\n  submitForm() {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n};\n\nCreateExpenseComponent = __decorate([Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css']\n})], CreateExpenseComponent);\nexport { CreateExpenseComponent };","map":{"version":3,"names":["Component","distributionTypesEnumMappings","CreateExpenseComponent","constructor","expenseService","groupService","location","route","formData","expenseName","description","distributionTypes","Object","values","ngOnInit","getExpenseCategories","subscribe","result","categories","console","log","groupId","snapshot","paramMap","get","parseInt","getGroupMembers","groupMembers","getCurrencies","currencies","goBack","back","submitForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\create-expense\\create-expense.component.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { distributionTypesEnumMappings as distributionTypesEnumMappings } from '../enum';\n\n@Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css'],\n})\nexport class CreateExpenseComponent implements OnInit {\n  formData = {\n    expenseName: '',\n    description: '',\n  };\n  groupMembers!: { id: number; username: string }[];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes: string[] = Object.values(distributionTypesEnumMappings)\n  currencies!: string[];\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseCategories().subscribe(result => {\n      this.categories = result;\n      console.log(this.categories);\n    });\n    const groupId = this.route.snapshot.paramMap.get('id');\n    this.groupId = parseInt(groupId!);\n    console.log('Group ID:', this.groupId);\n\n    this.groupService.getGroupMembers(this.groupId).subscribe(result=>{\n      this.groupMembers = result;\n      \n    })\n\n    this.expenseService.getCurrencies().subscribe(result=>{\n      this.currencies = result;\n      \n    })\n    // this.expenseService.getExpenseDistributions().subscribe(result=>{\n    //   this.distributionTypes = result;\n    // })\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  submitForm(): void {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,6BAA8D,QAAQ,SAAS;AAOxF,IAAaC,sBAAsB,GAAnC,MAAaA,sBAAsB;EAUjCC,YACUC,cAA8B,EAC9BC,YAA0B,EAC1BC,QAAkB,EAClBC,KAAqB;IAHrB,KAAAH,cAAc,GAAdA,cAAc;IACd,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IAbf,KAAAC,QAAQ,GAAG;MACTC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE;KACd;IAID,KAAAC,iBAAiB,GAAaC,MAAM,CAACC,MAAM,CAACZ,6BAA6B,CAAC;EAOvE;EACHa,QAAQA,CAAA;IACN,IAAI,CAACV,cAAc,CAACW,oBAAoB,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAI,CAACC,UAAU,GAAGD,MAAM;MACxBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,CAAC;IAC9B,CAAC,CAAC;IACF,MAAMG,OAAO,GAAG,IAAI,CAACd,KAAK,CAACe,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAI,CAACH,OAAO,GAAGI,QAAQ,CAACJ,OAAQ,CAAC;IACjCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACC,OAAO,CAAC;IAEtC,IAAI,CAAChB,YAAY,CAACqB,eAAe,CAAC,IAAI,CAACL,OAAO,CAAC,CAACL,SAAS,CAACC,MAAM,IAAE;MAChE,IAAI,CAACU,YAAY,GAAGV,MAAM;IAE5B,CAAC,CAAC;IAEF,IAAI,CAACb,cAAc,CAACwB,aAAa,EAAE,CAACZ,SAAS,CAACC,MAAM,IAAE;MACpD,IAAI,CAACY,UAAU,GAAGZ,MAAM;IAE1B,CAAC,CAAC;IACF;IACA;IACA;EACF;;EAEAa,MAAMA,CAAA;IACJ,IAAI,CAACxB,QAAQ,CAACyB,IAAI,EAAE;EACtB;EAEAC,UAAUA,CAAA;IACRb,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACZ,QAAQ,CAAC;IACxC;EACF;CACD;;AA/CYN,sBAAsB,GAAA+B,UAAA,EALlCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWlC,sBAAsB,CA+ClC;SA/CYA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}