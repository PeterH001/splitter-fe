{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASE_URL = 'http://localhost:3000/balance';\nclass BalanceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMyBalancesByGroupId(groupId) {\n    return this.http.get(BASE_URL + `/${groupId}`).pipe;\n  }\n  static #_ = this.ɵfac = function BalanceService_Factory(t) {\n    return new (t || BalanceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BalanceService,\n    factory: BalanceService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { BalanceService };","map":{"version":3,"names":["BASE_URL","BalanceService","constructor","http","getMyBalancesByGroupId","groupId","get","pipe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\services\\balance.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nconst BASE_URL = 'http://localhost:3000/balance'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BalanceService {\n\n  constructor(private http: HttpClient) { }\n\n  getMyBalancesByGroupId(groupId: number){\n    return this.http.get(BASE_URL + `/${groupId}`).pipe\n  }\n}\n"],"mappings":";;AAGA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,MAGaC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,sBAAsBA,CAACC,OAAe;IACpC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAACN,QAAQ,GAAG,IAAIK,OAAO,EAAE,CAAC,CAACE,IAAI;EACrD;EAAC,QAAAC,CAAA,G;qBANUP,cAAc,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdZ,cAAc;IAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEPf,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}