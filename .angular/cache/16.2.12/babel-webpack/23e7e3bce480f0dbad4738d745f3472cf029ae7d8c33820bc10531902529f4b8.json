{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/expense.service\";\nimport * as i2 from \"src/app/services/group.service\";\nimport * as i3 from \"@angular/router\";\nclass EditExpenseComponent {\n  constructor(expenseService, groupService, route, router) {\n    this.expenseService = expenseService;\n    this.groupService = groupService;\n    this.route = route;\n    this.router = router;\n    this.editExpenseForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n      groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n      amount: new FormControl('', Validators.required),\n      currency: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      distributionType: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      userIds: new FormControl([], [Validators.required, Validators.minLength(1)]),\n      proportionalDebtsData: new FormControl([], [percentSumValidator('distributionType')]),\n      exactAmountsDebtData: new FormControl([], [amountSumValidator('distributionType', 'amount')])\n    });\n    this.selectedGroupMembers = [];\n    this.proportionalMembers = [];\n    this.exactAmountsMembers = [];\n  }\n  ngOnInit() {\n    this.expenseService.getExpenseById;\n  }\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n  static #_ = this.ɵfac = function EditExpenseComponent_Factory(t) {\n    return new (t || EditExpenseComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.GroupService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditExpenseComponent,\n    selectors: [[\"app-edit-expense\"]],\n    decls: 2,\n    vars: 0,\n    template: function EditExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"edit-expense works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditExpenseComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","amountSumValidator","percentSumValidator","EditExpenseComponent","constructor","expenseService","groupService","route","router","editExpenseForm","name","required","payerId","min","groupId","amount","currency","category","distributionType","description","userIds","minLength","proportionalDebtsData","exactAmountsDebtData","selectedGroupMembers","proportionalMembers","exactAmountsMembers","ngOnInit","getExpenseById","get","_","i0","ɵɵdirectiveInject","i1","ExpenseService","i2","GroupService","i3","ActivatedRoute","Router","_2","selectors","decls","vars","template","EditExpenseComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { GroupService } from 'src/app/services/group.service';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.css'],\n})\nexport class EditExpenseComponent implements OnInit{\n  editExpenseForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n    groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n    amount: new FormControl('', Validators.required),\n    currency: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    distributionType: new FormControl('', Validators.required),\n    description: new FormControl(''),\n    userIds: new FormControl<number[]>(\n      [],\n      [Validators.required, Validators.minLength(1)]\n    ),\n    proportionalDebtsData: new FormControl<\n      { userId: number; percent: number }[]\n    >([], [percentSumValidator('distributionType')]),\n    exactAmountsDebtData: new FormControl<\n      { userId: number; amount: number }[]\n    >([], [amountSumValidator('distributionType', 'amount')]),\n  });\n\n  groupMembers!: { id: number; username: string }[];\n  selectedGroupMembers: number[] = [];\n  proportionalMembers: { userId: number; percent: number }[] = [];\n  exactAmountsMembers: { userId: number; amount: number }[] = [];\n  groupId!: number;\n  categories!: string[];\n  distributionTypes!: string[];\n  currencies!: string[];\n\n  constructor(\n    private expenseService: ExpenseService,\n    private groupService: GroupService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.expenseService.getExpenseById\n  }\n\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n}\n","<p>edit-expense works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}