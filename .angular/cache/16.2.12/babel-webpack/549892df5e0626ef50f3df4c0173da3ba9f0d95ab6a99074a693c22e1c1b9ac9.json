{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet EditProfileComponent = class EditProfileComponent {\n  constructor(location, userService) {\n    this.location = location;\n    this.userService = userService;\n    this.userDataForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      email: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.userService.getMe().subscribe(response => {\n      this.userData = response;\n      this.userDataForm.get('username')?.setValue(this.userData.username);\n      this.userDataForm.get('firstName')?.setValue(this.userData.firstName);\n      this.userDataForm.get('lastName')?.setValue(this.userData.lastName);\n      this.userDataForm.get('email')?.setValue(this.userData.email);\n    });\n  }\n  submitForm() {}\n  goBack() {\n    this.location.back();\n  }\n  get username() {\n    return this.userDataForm.get('username');\n  }\n  get email() {\n    return this.userDataForm.get('email');\n  }\n  get firstName() {\n    return this.userDataForm.get('firstName');\n  }\n  get lasName() {\n    return this.userDataForm.get('lasName');\n  }\n};\nEditProfileComponent = __decorate([Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})], EditProfileComponent);\nexport { EditProfileComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","EditProfileComponent","constructor","location","userService","userDataForm","username","required","firstName","lastName","email","ngOnInit","getMe","subscribe","response","userData","get","setValue","submitForm","goBack","back","lasName","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\user\\edit-profile\\edit-profile.component.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserDTO } from '../dto';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css'],\n})\nexport class EditProfileComponent implements OnInit {\n  userData!: UserDTO;\n\n  userDataForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    firstName: new FormControl(''),\n    lastName: new FormControl(''),\n    email: new FormControl('', [Validators.required]),\n  });\n  constructor(private location: Location, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.userService\n      .getMe()\n      .subscribe((response) => {\n        this.userData = response;\n        this.userDataForm.get('username')?.setValue(this.userData.username);\n        this.userDataForm.get('firstName')?.setValue(this.userData.firstName);\n        this.userDataForm.get('lastName')?.setValue(this.userData.lastName);\n        this.userDataForm.get('email')?.setValue(this.userData.email);\n      });\n  }\n\n  submitForm() {}\n\n  goBack() {\n    this.location.back();\n  }\n\n  get username() {\n    return this.userDataForm.get('username');\n  }\n  get email() {\n    return this.userDataForm.get('email');\n  }\n  get firstName() {\n    return this.userDataForm.get('firstName');\n  }\n  get lasName() {\n    return this.userDataForm.get('lasName');\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAOnE,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAS/BC,YAAoBC,QAAkB,EAAUC,WAAwB;IAApD,KAAAD,QAAQ,GAARA,QAAQ;IAAoB,KAAAC,WAAW,GAAXA,WAAW;IAN3D,KAAAC,YAAY,GAAG,IAAIN,SAAS,CAAC;MAC3BO,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDC,SAAS,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC9BW,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,CAAC;MAC7BY,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC;KACjD,CAAC;EACyE;EAE3EI,QAAQA,CAAA;IACN,IAAI,CAACP,WAAW,CACbQ,KAAK,EAAE,CACPC,SAAS,CAAEC,QAAQ,IAAI;MACtB,IAAI,CAACC,QAAQ,GAAGD,QAAQ;MACxB,IAAI,CAACT,YAAY,CAACW,GAAG,CAAC,UAAU,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACF,QAAQ,CAACT,QAAQ,CAAC;MACnE,IAAI,CAACD,YAAY,CAACW,GAAG,CAAC,WAAW,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACF,QAAQ,CAACP,SAAS,CAAC;MACrE,IAAI,CAACH,YAAY,CAACW,GAAG,CAAC,UAAU,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACF,QAAQ,CAACN,QAAQ,CAAC;MACnE,IAAI,CAACJ,YAAY,CAACW,GAAG,CAAC,OAAO,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACF,QAAQ,CAACL,KAAK,CAAC;IAC/D,CAAC,CAAC;EACN;EAEAQ,UAAUA,CAAA,GAAI;EAEdC,MAAMA,CAAA;IACJ,IAAI,CAAChB,QAAQ,CAACiB,IAAI,EAAE;EACtB;EAEA,IAAId,QAAQA,CAAA;IACV,OAAO,IAAI,CAACD,YAAY,CAACW,GAAG,CAAC,UAAU,CAAC;EAC1C;EACA,IAAIN,KAAKA,CAAA;IACP,OAAO,IAAI,CAACL,YAAY,CAACW,GAAG,CAAC,OAAO,CAAC;EACvC;EACA,IAAIR,SAASA,CAAA;IACX,OAAO,IAAI,CAACH,YAAY,CAACW,GAAG,CAAC,WAAW,CAAC;EAC3C;EACA,IAAIK,OAAOA,CAAA;IACT,OAAO,IAAI,CAAChB,YAAY,CAACW,GAAG,CAAC,SAAS,CAAC;EACzC;CACD;AAzCYf,oBAAoB,GAAAqB,UAAA,EALhCzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxB,oBAAoB,CAyChC;SAzCYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}