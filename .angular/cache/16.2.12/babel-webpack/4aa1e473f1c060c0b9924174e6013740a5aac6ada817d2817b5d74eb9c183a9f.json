{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/forms\";\nclass CreateGroupComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.formData = {\n      groupName: ''\n    };\n    this.users = this.searchControl.valueChanges.pipe(debounceTime(300), distinctUntilChanged(), switchMap(value => this.userService.getUsersByUsername(value)));\n  }\n  submitForm() {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n  static #_ = this.ɵfac = function CreateGroupComponent_Factory(t) {\n    return new (t || CreateGroupComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateGroupComponent,\n    selectors: [[\"app-create-group\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"row\", \"mb-4\", \"mt-4\"], [1, \"text-center\", \"display-4\"], [1, \"row\"], [1, \"col\"], [1, \"col-md-5\"], [1, \"form-group\", \"mb-2\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"disabled\", \"\", \"value\", \"here gonna be the add members section\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CreateGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\", 1);\n        i0.ɵɵtext(2, \"Create new group\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\")(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Group name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateGroupComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.formData.groupName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Group members\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function CreateGroupComponent_Template_button_click_15_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(16, \"Create\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(17, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.formData.groupName);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CreateGroupComponent };","map":{"version":3,"names":["CreateGroupComponent","constructor","userService","formData","groupName","users","searchControl","valueChanges","pipe","debounceTime","distinctUntilChanged","switchMap","value","getUsersByUsername","submitForm","console","log","_","i0","ɵɵdirectiveInject","i1","UserService","_2","selectors","decls","vars","consts","template","CreateGroupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CreateGroupComponent_Template_input_ngModelChange_10_listener","$event","CreateGroupComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\create-group\\create-group.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\group\\create-group\\create-group.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-create-group',\n  templateUrl: './create-group.component.html',\n  styleUrls: ['./create-group.component.css'],\n})\nexport class CreateGroupComponent {\n  formData = {\n    groupName: '',\n  };\n  constructor(private userService: UserService) {\n    this.users = this.searchControl.valueChanges.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap(value => this.userService.getUsersByUsername(value))\n    );\n  }\n\n\n  submitForm(): void {\n    console.log('Form data:', this.formData);\n    // Add your form submission logic here\n  }\n}\n","<div class=\"row mb-4 mt-4\">\n    <span class=\"text-center display-4\">Create new group</span>\n</div>\n<div class=\"row\">\n<div class=\"col\"></div>\n<div class=\"col-md-5\">\n    <form>\n        <div class=\"form-group mb-2\">\n          <label for=\"name\">Group name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"formData.groupName\">\n        </div>\n        <div class=\"form-group mb-2\">\n          <label for=\"email\">Group members</label>\n          <!-- TODO: add add user logic -->\n          <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" disabled value=\"here gonna be the add members section\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitForm()\">Create</button>\n      </form>\n</div>\n<div class=\"col\"></div>\n</div>\n"],"mappings":";;;AAGA,MAKaA,oBAAoB;EAI/BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,QAAQ,GAAG;MACTC,SAAS,EAAE;KACZ;IAEC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,aAAa,CAACC,YAAY,CAACC,IAAI,CAC/CC,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE,EACtBC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACV,WAAW,CAACW,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAC/D;EACH;EAGAE,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACb,QAAQ,CAAC;IACxC;EACF;EAAC,QAAAc,CAAA,G;qBAhBUjB,oBAAoB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBtB,oBAAoB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjCX,EAAA,CAAAa,cAAA,aAA2B;QACab,EAAA,CAAAc,MAAA,uBAAgB;QAAAd,EAAA,CAAAe,YAAA,EAAO;QAE/Df,EAAA,CAAAa,cAAA,aAAiB;QACjBb,EAAA,CAAAgB,SAAA,aAAuB;QACvBhB,EAAA,CAAAa,cAAA,aAAsB;QAGMb,EAAA,CAAAc,MAAA,iBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACpCf,EAAA,CAAAa,cAAA,gBAA+F;QAAjCb,EAAA,CAAAiB,UAAA,2BAAAC,8DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAA3B,QAAA,CAAAC,SAAA,GAAAiC,MAAA;QAAA,EAAgC;QAA9FnB,EAAA,CAAAe,YAAA,EAA+F;QAEjGf,EAAA,CAAAa,cAAA,cAA6B;QACRb,EAAA,CAAAc,MAAA,qBAAa;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAExCf,EAAA,CAAAgB,SAAA,gBAAwH;QAC1HhB,EAAA,CAAAe,YAAA,EAAM;QACNf,EAAA,CAAAa,cAAA,kBAAqE;QAAvBb,EAAA,CAAAiB,UAAA,mBAAAG,uDAAA;UAAA,OAASR,GAAA,CAAAhB,UAAA,EAAY;QAAA,EAAC;QAACI,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAG5Ff,EAAA,CAAAgB,SAAA,cAAuB;QACvBhB,EAAA,CAAAe,YAAA,EAAM;;;QAXkEf,EAAA,CAAAqB,SAAA,IAAgC;QAAhCrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAA3B,QAAA,CAAAC,SAAA,CAAgC;;;;;;;SDD3FJ,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}