{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_div_25_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"required\"]);\n  }\n}\nconst ROLE_ADMIN = 'admin';\nconst ROLE_USER = 'user';\nclass LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.loginForm2 = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  login(loginForm) {\n    console.log(loginForm.value);\n    console.log('form is submitted');\n    this.authService.login(loginForm.value).subscribe(response => {\n      const token = response.token;\n      const role = response.role;\n      this.authService.setToken(response.token);\n      this.authService.setRoles(response.role);\n      if (role === ROLE_ADMIN) {\n        this.router.navigate(['/admin']);\n      } else {\n        this.router.navigate(['/groups']);\n      }\n    }, error => {\n      console.log(error.message);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"row\", \"mb-4\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"display-4\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-4\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"row\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter your email\", 1, \"form-control\", \"mb-3\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", 1, \"form-control\", \"mb-3\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\", \"form-control\"], [3, \"formGroup\"], [1, \"row\", \"mb-2\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(8);\n          return i0.ɵɵresetView(ctx.login(_r0));\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 1);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 1);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 1);\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"form\", 12)(19, \"div\", 13)(20, \"div\", 1)(21, \"div\", 14)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵtemplate(25, LoginComponent_div_25_Template, 2, 1, \"div\", 17);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm2);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && ((ctx.email == null ? null : ctx.email.dirty) || (ctx.email == null ? null : ctx.email.touched)));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_25_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r1","email","errors","ROLE_ADMIN","ROLE_USER","LoginComponent","constructor","authService","router","loginForm2","required","password","login","loginForm","console","log","value","subscribe","response","token","role","setToken","setRoles","navigate","error","message","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_7_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","LoginComponent_div_25_Template","invalid","dirty","touched"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\login\\login.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\nconst ROLE_ADMIN: string = 'admin';\nconst ROLE_USER: string = 'user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  loginForm2 = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  })\n  login(loginForm: NgForm) {\n    console.log(loginForm.value);\n    console.log('form is submitted');\n    this.authService.login(loginForm.value).subscribe(\n      (response: any) => {\n        const token = response.token;\n        const role = response.role;\n        this.authService.setToken(response.token);\n        this.authService.setRoles(response.role);\n        if (role === ROLE_ADMIN) {\n          this.router.navigate(['/admin']);\n        } else {\n          this.router.navigate(['/groups']);\n        }\n      },\n      (error) => {\n        console.log(error.message);\n      }\n    );\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"col\">\n    <div class=\"d-flex justify-content-center\">\n      <span class=\"display-4\">Login</span>\n    </div>\n  </div>\n</div>\n<div class=\"row d-flex justify-content-center\">\n  <div class=\"col-md-4\">\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <input\n          type=\"email\"\n          ngModel\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          class=\"form-control mb-3\"\n        />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input\n          type=\"password\"\n          ngModel\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"Enter your password\"\n          class=\"form-control mb-3\"\n        />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input type=\"submit\" class=\"btn btn-primary form-control\" value=\"Login\" />\n        </div>\n      </div>\n    </form>\n    <form [formGroup]=\"loginForm2\">\n      <div class=\"row mb-2\">\n        <div class=\"col\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              formControlName=\"email\"\n              required\n            />\n            <div\n              *ngIf=\"\n                email?.invalid && (email?.dirty || email?.touched)\n              \"\n              class=\"alert alert-danger\"\n            >\n              <div *ngIf=\"email?.errors?.['required']\">\n                Name is required.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}