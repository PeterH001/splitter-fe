{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\nimport * as i0 from \"@angular/core\";\nclass EditExpenseComponent {\n  constructor() {\n    this.editExpenseForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n      groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n      amount: new FormControl('', Validators.required),\n      currency: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      distributionType: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      userIds: new FormControl([], [Validators.required, Validators.minLength(1)]),\n      proportionalDebtsData: new FormControl([], [percentSumValidator('distributionType')]),\n      exactAmountsDebtData: new FormControl([], [amountSumValidator('distributionType', 'amount')])\n    });\n  }\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n  static #_ = this.ɵfac = function EditExpenseComponent_Factory(t) {\n    return new (t || EditExpenseComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditExpenseComponent,\n    selectors: [[\"app-edit-expense\"]],\n    decls: 2,\n    vars: 0,\n    template: function EditExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"edit-expense works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditExpenseComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","amountSumValidator","percentSumValidator","EditExpenseComponent","constructor","editExpenseForm","name","required","payerId","min","groupId","amount","currency","category","distributionType","description","userIds","minLength","proportionalDebtsData","exactAmountsDebtData","get","_","_2","selectors","decls","vars","template","EditExpenseComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.ts","C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\expense\\edit-expense\\edit-expense.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { amountSumValidator, percentSumValidator } from '../validators';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.css'],\n})\nexport class EditExpenseComponent {\n  editExpenseForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    payerId: new FormControl(-1, [Validators.required, Validators.min(0)]),\n    groupId: new FormControl(-1, [Validators.min(0), Validators.required]),\n    amount: new FormControl('', Validators.required),\n    currency: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    distributionType: new FormControl('', Validators.required),\n    description: new FormControl(''),\n    userIds: new FormControl<number[]>(\n      [],\n      [Validators.required, Validators.minLength(1)]\n    ),\n    proportionalDebtsData: new FormControl<\n      { userId: number; percent: number }[]\n    >([], [percentSumValidator('distributionType')]),\n    exactAmountsDebtData: new FormControl<\n      { userId: number; amount: number }[]\n    >([], [amountSumValidator('distributionType', 'amount')]),\n  });\n\n  get name() {\n    return this.editExpenseForm.get('name');\n  }\n  get currency() {\n    return this.editExpenseForm.get('currency');\n  }\n  get amount() {\n    return this.editExpenseForm.get('amount');\n  }\n  get payerId() {\n    return this.editExpenseForm.get('payerId');\n  }\n  get category() {\n    return this.editExpenseForm.get('category');\n  }\n  get distributionType() {\n    return this.editExpenseForm.get('distributionType');\n  }\n  get userIds() {\n    return this.editExpenseForm.get('userIds');\n  }\n  get proportionalDebtsData() {\n    return this.editExpenseForm.get('proportionalDebtsData');\n  }\n  get exactAmountsDebtData() {\n    return this.editExpenseForm.get('exactAmountsDebtData');\n  }\n}\n","<p>edit-expense works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}