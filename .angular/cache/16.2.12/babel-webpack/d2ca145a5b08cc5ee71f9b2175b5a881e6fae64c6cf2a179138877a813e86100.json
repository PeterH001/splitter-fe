{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/auth';\n  }\n  signup() {\n    rerurn;\n    this.http.post(this.url + '/signup', null);\n  }\n  signin() {\n    console.log('signin called in authService');\n    return this.http.post('localhost:3000/auth/signin', {});\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","url","signup","rerurn","post","signin","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n  url: string = 'http://localhost:3000/auth';\n  signup() {\n    rerurn this.http.post(this.url + '/signup', null);\n  }\n  signin() {\n    console.log('signin called in authService');\n    \n    return this.http.post('localhost:3000/auth/signin', {});\n  }\n}\n"],"mappings":";;AAGA,MAGaA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,GAAG,GAAW,4BAA4B;EADF;EAExCC,MAAMA,CAAA;IACJC,MAAM;IAAC,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,GAAG,SAAS,EAAE,IAAI,CAAC;EACnD;EACAI,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAE3C,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAC,4BAA4B,EAAE,EAAE,CAAC;EACzD;EAAC,QAAAI,CAAA,G;qBAVUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}