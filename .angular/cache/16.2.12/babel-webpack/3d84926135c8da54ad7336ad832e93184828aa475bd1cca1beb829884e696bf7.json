{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:3000/auth';\n  }\n  signup() {\n    return this.httpClient.post(this.url + '/signup', null);\n  }\n  signin() {\n    console.log('signin called in authService');\n    return this.httpClient.get('http://localhost:3000/auth/signin');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","httpClient","url","signup","post","signin","console","log","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Peti\\nest_projects\\splitwise\\frontend\\splitter-fe\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private httpClient: HttpClient) { }\n  url: string = 'http://localhost:3000/auth';\n  signup() {\n    return this.httpClient.post(this.url + '/signup', null);\n  }\n  signin() {\n    console.log('signin called in authService');\n    \n    return this.httpClient.get('http://localhost:3000/auth/signin');\n  }\n}\n"],"mappings":";;AAGA,MAGaA,WAAW;EACtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC9B,KAAAC,GAAG,GAAW,4BAA4B;EADI;EAE9CC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACF,GAAG,GAAG,SAAS,EAAE,IAAI,CAAC;EACzD;EACAG,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAE3C,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,mCAAmC,CAAC;EACjE;EAAC,QAAAC,CAAA,G;qBAVUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}